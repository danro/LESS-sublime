{
  "fileTypes" : [
    "less",
    "css"
  ],
  "foldingStartMarker" : "\/\\*\\*(?!\\*)|\\{\\s*($|\/\\*(?!.*?\\*\/.*\\S))",
  "foldingStopMarker" : "(?<!\\*)\\*\\*\/|^\\s*\\}",
  "keyEquivalent" : "^~L",
  "repository" : {
    "numeric-values" : {
      "patterns" : [
        {
          "match" : "(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\\b",
          "captures" : {
            "1" : {
              "name" : "punctuation.definition.constant.css"
            }
          },
          "name" : "constant.other.color.rgb-value.css"
        },
        {
          "match" : "(?x)(?:-|\\+)?(?:(?:[0-9]+(?:\\.[0-9]+)?)|(?:\\.[0-9]+))((?:px|pt|ch|cm|mm|in|r?em|ex|pc|deg|g?rad|dpi|dpcm|ms|s)\\b|%)?",
          "captures" : {
            "1" : {
              "name" : "keyword.other.unit.css"
            }
          },
          "name" : "constant.numeric.css"
        }
      ]
    },
    "property-names" : {
      "begin" : "(?<![-a-z])(?=[-a-z])",
      "end" : "$|(?![-a-z])",
      "patterns" : [
       {
         "match" : "\\b(word)\\b",
         "name" : "support.type.property-name.css"
       }
     ],
     "name" : "support.type.property-name.css"
    },
    "property-values" : {
      "patterns" : [
        {
          "include" : "#less-variables"
        },
        {
          "include" : "#less-data-uri"
        },
        {
          "include" : "#less-functions"
        },
        {
          "include" : "#less-operators"
        },
        {
          "include" : "#color-values"
        },
        {
          "include" : "#numeric-values"
        },
        {
          "include" : "#less-parameters"
        },
        {
          "match" : "\\b(absolute|all(-scroll)?|always|subpixel-antialiased|antialiased|armenian|auto|avoid|baseline|below|bidi-override|block|bold|bolder|border-box|both|bottom|break-all|break-word|capitalize|center|char|circle|cjk-ideographic|content-box|col-resize|collapse|crosshair|dashed|decimal-leading-zero|decimal|default|disabled|disc|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ellipsis|fixed|geometricPrecision|georgian|groove|hand|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|inactive|inherit|inline-block|inline|inset|inside|inter-ideograph|inter-word|italic|justify|katakana-iroha|katakana|keep-all|left|lighter|line-edge|line-through|line|list-item|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|medium|middle|move|n-resize|ne-resize|newspaper|no-drop|no-repeat|nw-resize|none|normal|not-allowed|nowrap|oblique|optimize(Legibility|Quality|Speed)|outset|outside|overline|pointer|pre(-(wrap|line))?|progress|relative|repeat-x|repeat-y|repeat|right|ridge|row-resize|rtl|s-resize|scroll|se-resize|separate|small-caps|solid|square|static|strict|sub|super|sw-resize|table-footer-group|table-header-group|table|tb-rl|text-bottom|text-top|textfield|text|thick|thin|top|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|vertical(-(ideographic|text))?|visible(Painted|Fill|Stroke)?|w-resize|wait|whitespace|zero|smaller|larger|((xx?-)?(small|large))|painted|fill|stroke)\\b",
          "name" : "support.constant.property-value.css"
        },
        {
          "include" : "#selector"
        },
        {
          "match" : "(\\b(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace)\\b)",
          "name" : "support.constant.font-name.css"
        },
        {
          "include" : "#string-double"
        },
        {
          "include" : "#string-single"
        },
        {
          "end" : "(\\))",
          "begin" : "(rect)\\s*(\\()",
          "beginCaptures" : {
            "1" : {
              "name" : "support.function.misc.css"
            },
            "2" : {
              "name" : "punctuation.section.function.css"
            }
          },
          "patterns" : [
            {
              "include" : "#numeric-values"
            }
          ],
          "endCaptures" : {
            "1" : {
              "name" : "punctuation.section.function.css"
            }
          }
        },
        {
          "begin" : "(format|local|url|attr|counter|counters)\\s*(\\()",
          "end" : "(\\))",
          "beginCaptures" : {
            "1" : {
              "name" : "support.function.misc.css"
            },
            "2" : {
              "name" : "punctuation.section.function.css"
            }
          },
          "patterns" : [
            {
              "include" : "#string-single"
            },
            {
              "include" : "#string-double"
            },
            {
              "match" : "[^'\") \\t]+",
              "name" : "variable.parameter.misc.css"
            }
          ],
          "endCaptures" : {
            "1" : {
              "name" : "punctuation.section.function.css"
            }
          }
        },
        {
          "match" : "\\!\\s*important",
          "name" : "keyword.other.important.css"
        }
      ]
    },
    "selector" : {
      "patterns" : [
        {
          "match" : "\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|samp|script|section|select|small|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\b",
          "name" : "entity.name.tag.css, keyword.control.html.elements"
        },
        {
          "match" : "(\\.)[a-zA-Z0-9_-]+",
          "captures" : {
            "1" : {
              "name" : "punctuation.definition.entity.css"
            }
          },
          "name" : "entity.other.attribute-name.class.css"
        },
        {
          "match" : "(#)[a-zA-Z][a-zA-Z0-9_-]*",
          "captures" : {
            "1" : {
              "name" : "punctuation.definition.entity.css"
            }
          },
          "name" : "entity.other.attribute-name.id.css"
        },
        {
          "match" : "\\*",
          "name" : "entity.name.tag.wildcard.css"
        },
        {
          "match" : "(:)((first|last)-child|(first|last|only)-of-type|empty|root|target|first|left|right)\\b",
          "captures" : {
            "1" : {
              "name" : "punctuation.definition.entity.css"
            }
          },
          "name" : "entity.other.attribute-name.pseudo-class.css"
        },
        {
          "match" : "(:)(checked|enabled|default|disabled|indeterminate|invalid|optional|required|valid)\\b",
          "captures" : {
            "1" : {
              "name" : "punctuation.definition.entity.css"
            }
          },
          "name" : "entity.other.attribute-name.pseudo-class.ui-state.css"
        },
        {
          "end" : "\\)",
          "begin" : "((:)not)(\\()",
          "beginCaptures" : {
            "3" : {
              "name" : "punctuation.section.function.css"
            },
            "1" : {
              "name" : "entity.other.attribute-name.pseudo-class.css"
            },
            "2" : {
              "name" : "punctuation.definition.entity.css"
            }
          },
          "patterns" : [
            {
              "include" : "#selector"
            }
          ],
          "endCaptures" : {
            "0" : {
              "name" : "punctuation.section.function.css"
            }
          }
        },
        {
          "begin" : "((:)nth-(?:(?:last-)?child|(?:last-)?of-type))(\\()",
          "end" : "(\\))",
          "beginCaptures" : {
            "1" : {
              "name" : "entity.other.attribute-name.pseudo-class.css"
            },
            "2" : {
              "name" : "punctuation.definition.entity.css"
            },
            "3" : {
              "name" : "punctuation.section.function.css"
            }
          },
          "contentName" : "constant.numeric.css",
          "endCaptures" : {
            "1" : {
              "name" : "punctuation.section.function.css"
            }
          }
        },
        {
          "match" : "(:+)(?:-(?:webkit|moz|o)-)?([a-zA-Z0-9_-]*)\\b",
          "captures" : {
            "1" : {
              "name" : "punctuation.definition.entity.css"
            }
          },
          "name" : "entity.other.attribute-name.pseudo-element.css"
        },
        {
          "match" : "(:)(active|hover|link|visited|focus)\\b",
          "captures" : {
            "1" : {
              "name" : "punctuation.definition.entity.css"
            }
          },
          "name" : "entity.other.attribute-name.pseudo-class.css"
        },
        {
          "match" : "(?i)(\\[)\\s*(-?[_a-z\\\\[[:^ascii:]]][_a-z0-9\\-\\\\[[:^ascii:]]]*)(?:\\s*([~|^$*]?=)\\s*(?:(-?[_a-z\\\\[[:^ascii:]]][_a-z0-9\\-\\\\[[:^ascii:]]]*)|((?>(['\"])(?:[^\\\\]|\\\\.)*?(\\6)))))?\\s*(\\])",
          "captures" : {
            "7" : {
              "name" : "punctuation.definition.string.end.css"
            },
            "3" : {
              "name" : "punctuation.separator.operator.css"
            },
            "4" : {
              "name" : "string.unquoted.attribute-value.css"
            },
            "5" : {
              "name" : "string.quoted.double.attribute-value.css"
            },
            "1" : {
              "name" : "punctuation.definition.entity.css"
            },
            "6" : {
              "name" : "punctuation.definition.string.begin.css"
            },
            "2" : {
              "name" : "entity.other.attribute-name.attribute.css"
            }
          },
          "name" : "meta.attribute-selector.css"
        }
      ],
      "name" : "meta.selector.css"
    },
    "string-double" : {
      "end" : "\"",
      "begin" : "\"",
      "beginCaptures" : {
        "0" : {
          "name" : "punctuation.definition.string.begin.css"
        }
      },
      "patterns" : [
        {
          "match" : "\\\\.",
          "name" : "constant.character.escape.css"
        }
      ],
      "endCaptures" : {
        "0" : {
          "name" : "punctuation.definition.string.end.css"
        }
      },
      "name" : "string.quoted.double.css"
    },
    "string-single" : {
      "end" : "'",
      "begin" : "'",
      "beginCaptures" : {
        "0" : {
          "name" : "punctuation.definition.string.begin.css"
        }
      },
      "patterns" : [
        {
          "match" : "\\\\.",
          "name" : "constant.character.escape.css"
        }
      ],
      "endCaptures" : {
        "0" : {
          "name" : "punctuation.definition.string.end.css"
        }
      },
      "name" : "string.quoted.single.css"
    },
    "color-values" : {
      "patterns" : [
        {
          "match" : "\\b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\\b",
          "comment" : "http:\/\/www.w3.org\/TR\/CSS21\/syndata.html#value-def-color",
          "name" : "support.constant.color.w3c-standard-color-name.css"
        },
        {
          "match" : "\\b(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|turquoise|violet|wheat|whitesmoke|yellowgreen)\\b",
          "comment" : "These colours are mostly recognised but will not validate. ref: http:\/\/www.w3schools.com\/css\/css_colornames.asp",
          "name" : "support.constant.color.non-standard"
        },
        {
          "end" : "(\\))",
          "begin" : "(hsla?|rgba?)\\s*(\\()",
          "beginCaptures" : {
            "1" : {
              "name" : "support.function.misc.css"
            },
            "2" : {
              "name" : "punctuation.section.function.css"
            }
          },
          "patterns" : [
            {
              "match" : "(?x)\\b(0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\\s*,\\s*){2}(0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\\b)(\\s*,\\s*((0?\\.[0-9]+)|[0-1]))?",
              "name" : "constant.other.color.rgb-value.css"
            },
            {
              "match" : "\\b([0-9]{1,2}|100)\\s*%,\\s*([0-9]{1,2}|100)\\s*%,\\s*([0-9]{1,2}|100)\\s*%",
              "name" : "constant.other.color.rgb-percentage.css"
            },
            {
              "include" : "#numeric-values"
            }
          ],
          "endCaptures" : {
            "1" : {
              "name" : "punctuation.section.function.css"
            }
          }
        }
      ]
    },
    "rule-list" : {
      "patterns" : [
        {
          "include" : "#comment-block"
        },
        {
          "include" : "#comment-line"
        },
        {
          "include" : "#selector"
        },
        {
          "include" : "#property-names"
        },
        {
          "begin" : "(:)\\s*",
          "end" : "\\s*(;|(?=\\}))",
          "beginCaptures" : {
            "1" : {
              "name" : "punctuation.separator.key-value.css"
            }
          },
          "patterns" : [
            {
              "include" : "#property-values"
            }
          ],
          "endCaptures" : {
            "1" : {
              "name" : "punctuation.terminator.rule.css"
            }
          },
          "name" : "meta.property-value.css"
        }
      ],
      "name" : "meta.property-list.css"
    },
    "comment-block" : {
      "begin" : "\/\\*",
      "end" : "\\*\/",
      "captures" : {
        "0" : {
          "name" : "punctuation.definition.comment.css"
        }
      },
      "name" : "comment.block.css"
    },
    "comment-line" : {
      "begin" : "\/\/",
      "end" : "$\\n?",
      "captures" : {
        "0" : {
          "name" : "punctuation.definition.comment.css"
        }
      },
      "name" : "comment.line.double-slash.less"
    },
    "less-variables" : {
      "patterns" : [
        {
          "match" : "@[a-zA-Z0-9_-][\\w-]*",
          "name" : "variable.other.less"
        },
        {
          "match" : "@{[a-zA-Z0-9_-][\\w-]*}",
          "name" : "variable.interpolation.less"
        },
        {
          "begin" : "`",
          "end" : "`",
          "name" : "comment markup.raw"
        },
        {
          "begin" : "(~)`",
          "end" : "`",
          "beginCaptures" : {
            "1" : {
              "name" : "keyword.operator.less"
            }
          },
          "name" : "comment markup.raw"
        },
        {
          "begin" : "(~)\"",
          "end" : "\"",
          "beginCaptures" : {
            "1" : {
              "name" : "keyword.operator.less"
            }
          },
          "name" : "string.quoted.double.css comment markup.raw"
        },
        {
          "begin" : "(~)'",
          "end" : "'",
          "beginCaptures" : {
            "1" : {
              "name" : "keyword.operator.less"
            }
          },
          "name" : "string.quoted.single.css comment markup.raw"
        }
      ]
    },
    "less-declarations" : {
      "patterns" : [
        {
          "match" : "(?>@[a-zA-Z0-9_-][\\w-]*+)(?!:)",
          "name" : "variable.other.less"
        },
        {
          "match" : "@[a-zA-Z0-9_-][\\w-]*",
          "name" : "variable.declaration.less"
        }
      ]
    },
    "less-operators" : {
      "match" : "\/|!important|$|%|&|\\*|\\-\\-|\\-|\\+\\+|\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|(?<!\\()\/=|%=|\\+=|\\-=|&=|when\\b|and\\b|not\\b",
      "name" : "keyword.operator.less"
    },
    "less-data-uri" : {
      "patterns": [
        {
          "begin" : "(url)(\\()(data:)",
          "end" : "(\\))",
          "beginCaptures" : {
            "1" : {
              "name" : "support.function.misc.css"
            },
            "2" : {
              "name" : "punctuation.section.function.css"
            },
            "3" : {
              "name" : "parameter.less.data-uri comment markup.raw"
            }
          },
          "contentName" : "parameter.less.data-uri comment markup.raw",
          "endCaptures" : {
            "1" : {
              "name" : "punctuation.section.function.css"
            }
          }
        },
        {
          "begin" : "(url)(\\()(\"data:)",
          "end" : "(?<=\")(\\))",
          "beginCaptures" : {
            "1" : {
              "name" : "support.function.misc.css"
            },
            "2" : {
              "name" : "punctuation.section.function.css"
            },
            "3" : {
              "name" : "parameter.less.data-uri comment markup.raw"
            }
          },
          "contentName" : "parameter.less.data-uri comment markup.raw",
          "endCaptures" : {
            "1" : {
              "name" : "punctuation.section.function.css"
            }
          }
        },
        {
          "begin" : "(url)(\\()('data:)",
          "end" : "(?<=\\')(\\))",
          "beginCaptures" : {
            "1" : {
              "name" : "support.function.misc.css"
            },
            "2" : {
              "name" : "punctuation.section.function.css"
            },
            "3" : {
              "name" : "parameter.less.data-uri comment markup.raw"
            }
          },
          "contentName" : "parameter.less.data-uri comment markup.raw",
          "endCaptures" : {
            "1" : {
              "name" : "punctuation.section.function.css"
            }
          }
        }
      ]
    },
    "less-functions" : {
      "patterns": [
        {
          "match" : "([%a-zA-Z\\-\\_\\d]*)(?=\\()",
          "name" : "support.function.less"
          },
        {
          "match" : "(\\.(?![0-9])[a-zA-Z0-9_-]+(?=\\())",
          "captures" : {
            "1" : {
              "name" : "entity.other.attribute-name.class.css entity.other.less.mixin"
            }
          }
        }
      ]
    },
    "less-at-rules" : {
      "match" : "^\\s*((@)(?:-(?:webkit|moz|o)-)?(charset|import|namespace|media|page|font-face|keyframes|supports|document)\\b)",
      "captures" : {
        "1" : {
          "name" : "keyword.control.at-rule.css"
        },
        "2" : {
          "name" : "punctuation.definition.keyword.css"
        }
      },
      "name" : "meta.at-rule.css"
    },
    "less-parameters" : {
      "begin" : "\\(",
      "end" : "\\)",
      "patterns": [
        {
          "include" : "#color-values"
        },
        {
          "include" : "#less-parameters"
        },
        {
          "include" : "#less-functions"
        },
        {
          "include" : "#numeric-values"
        },
        {
          "include" : "#string-double"
        },
        {
          "include" : "#string-single"
        },
        {
          "include" : "#less-variables"
        },
        {
          "match" : "(?:\\:/)?[\\/\\.a-zA-Z0-9_\\-]*",
          "name" : "variable.parameter.misc.css"
        },
        {
          "include" : "#less-operators"
        }
      ],
      "name" : "parameter.less"
    }
  },
  "uuid" : "69AA0917-B7BB-11D9-A7E2-000D93C8BE28",
  "patterns" : [
    {
      "include" : "#comment-block"
    },
    {
      "include" : "#comment-line"
    },
    {
      "include" : "#less-at-rules"
    },
    {
      "include" : "#less-declarations"
    },
    {
      "include" : "#less-variables"
    },
    {
      "include" : "#less-functions"
    },
    {
      "include" : "#string-double"
    },
    {
      "include" : "#string-single"
    },
    {
      "include" : "#selector"
    },
    {
      "include" : "#rule-list"
    },
    {
      "include" : "#less-operators"
    },
    {
      "include" : "#less-parameters"
    },
    {
      "include" : "#numeric-values"
    }
  ],
  "comment" : "LESS",
  "name" : "LESS",
  "scopeName" : "source.less"
}
