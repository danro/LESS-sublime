// SYNTAX TEST "Packages/LESS/Syntaxes/Less.sublime-syntax"

//=============================================================================
// Comments
// https://lesscss.org/#comments
//=============================================================================

// comment
// <- comment.line.double-slash.less punctuation.definition.comment.less
 // <- comment.line.double-slash.less punctuation.definition.comment.less
//^^^^^^^^^ comment.line.double-slash.less - punctuation

/**
// <- comment.block.css punctuation.definition.comment.begin.css
//^ comment.block.css punctuation.definition.comment.begin.css
// ^ comment.block.css - punctuation

 * { item_description }
 // <- comment.block.css punctuation.definition.comment.css

 */
// <- comment.block.css - punctuation
 // <- comment.block.css punctuation.definition.comment.end.css
//^ comment.block.css punctuation.definition.comment.end.css
// ^ - comment

  button
  , button          // perhaps you want to type button:hover
// ^^^^^^^^^^^^^^^^^ meta.selector.css - comment
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css comment.line.double-slash.less

  , selector-ish    /* with comments at the end */
// ^^^^^^^^^^^^^^^^^ meta.selector.css - comment
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css comment.block.css

  , button:         // or maybe button::before
// ^^^^^^^^^^^^^^^^^ meta.selector.css - comment
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css comment.line.double-slash.less
  { // ; comment
// <- meta.selector.css
//^^ meta.property-list.css meta.block.css - comment
//  ^^^^^^^^^^^^^ meta.property-list.css meta.block.css comment.line.double-slash.less
//  ^^ punctuation.definition.comment.less

    color: /**/ // ; comment
//        ^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css
//         ^^ comment.block.css punctuation.definition.comment.begin.css
//           ^^ comment.block.css punctuation.definition.comment.end.css
//              ^^^^^^^^^^^^^ comment.line.double-slash.less
//              ^^ punctuation.definition.comment.less
        darken(blue /**/) ; //comment
//     ^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css
//                  ^^^^ comment.block.css
//                        ^^ meta.property-list.css meta.block.css - comment
//                          ^^^^^^^^^^ meta.property-list.css meta.block.css comment.line.double-slash.less

  } // comment
// <- meta.property-list.css meta.block.css
//^ meta.property-list.css meta.block.css punctuation.section.block.end.css
// ^ - meta.property-list - meta.block - punctuation
//  ^^^^^^^^^^^ comment.line.double-slash.less

//=============================================================================
// import At-Rules
// https://lesscss.org/#importing
// https://lesscss.org/features/#import-atrules-feature
//=============================================================================

@import "myfile.less";
// <- meta.at-rule.import.css keyword.control.directive.css punctuation.definition.keyword.css
//^^^^^^^^^^^^^^^^^^^ meta.at-rule.import.css
//^^^^^ keyword.control.directive.css
//      ^^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//      ^ punctuation.definition.string.begin.css
//                  ^ punctuation.definition.string.end.css
//                   ^ punctuation.terminator.rule.css

@import (less, optional) "simple.css";
// <- meta.at-rule.import.css keyword.control.directive.css punctuation.definition.keyword.css
//^^^^^^ meta.at-rule.import.css - meta.group
//      ^^^^^^^^^^^^^^^^ meta.at-rule.import.options.css meta.group.less
//                      ^^^^^^^^^^^^^ meta.at-rule.import.css - meta.group
//^^^^^ keyword.control.directive.css
//      ^ punctuation.section.group.begin.less
//       ^^^^ constant.language.import.less
//           ^ punctuation.separator.sequence.css
//             ^^^^^^^^ constant.language.import.less
//                     ^ punctuation.section.group.end.less
//                       ^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//                                   ^ punctuation.terminator.rule.css

//=============================================================================
// plugin At-Rules
// https://lesscss.org/features/#plugin-atrules-feature
//=============================================================================

    @plugin "lib1";
//  ^^^^^^^^^^^^^^ meta.at-rule.plugin.less
//  ^^^^^^^ keyword.control.directive.less
//  ^ punctuation.definition.keyword.less
//          ^^^^^^ meta.string.css string.quoted.double.css

.el-1 {
    @plugin "lib1";
//  ^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.at-rule.plugin.less
//  ^^^^^^^ keyword.control.directive.less
//  ^ punctuation.definition.keyword.less
//          ^^^^^^ meta.string.css string.quoted.double.css
    value: foo();
}
.el-2 {
    @plugin "lib2";
//  ^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.at-rule.plugin.less
//  ^^^^^^^ keyword.control.directive.less
//  ^ punctuation.definition.keyword.less
//          ^^^^^^ meta.string.css string.quoted.double.css
    value: foo();
}

//=============================================================================
// Variable
// https://lesscss.org/features/#variables-feature-overview
//=============================================================================

@variable: .selector;
// <- meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
//^^^^^^^ meta.declaration.identifier.less variable.other.less
//       ^ meta.declaration.less punctuation.separator.key-value.css
//        ^^^^^^^^^^ meta.declaration.value.less
//         ^^^^^^^^^ meta.mixin.less entity.other.attribute-name.class.css

@variable: #g28bcf;
// <- meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
//^^^^^^^ meta.declaration.identifier.less variable.other.less
//       ^ meta.declaration.less punctuation.separator.key-value.css
//        ^ meta.declaration.value.less - meta.selector - entity
//         ^^^^^^^ meta.declaration.value.less meta.mixin.less entity.other.attribute-name.id.css

@link-color: #428bca; // sea blue
// <- meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
//^^^^^^^^^ meta.declaration.identifier.less variable.other.less
//         ^ meta.declaration.less punctuation.separator.key-value.css
//          ^^^^^^^^ meta.declaration.value.less
//           ^^^^^^^ constant.other.color.rgb-value.css
//                  ^ punctuation.terminator.rule.css
//                    ^^^^^^^^^^^^ comment.line.double-slash.less

@another-variable: @variable;
// <- meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
//^^^^^^^^^^^^^^^ meta.declaration.identifier.less variable.other.less
//               ^ meta.declaration.less punctuation.separator.key-value.css
//                ^^^^^^^^^^ meta.declaration.value.less
//                 ^^^^^^^^^ variable.other.less
//                          ^ punctuation.terminator.rule.css

a { @link-color-hover: darken(@link-color, 10%); }
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//  ^^^^^^^^^^^^^^^^^ meta.declaration.identifier.less variable.other.less
//                   ^ meta.declaration.less punctuation.separator.key-value.css
//                    ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.declaration.value.less
//                     ^^^^^^ meta.function-call.identifier.less support.function.less
//                           ^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                           ^ punctuation.section.group.begin.less
//                            ^^^^^^^^^^^ variable.other.less
//                                       ^ punctuation.separator.sequence.css
//                                         ^^^ meta.number.integer.decimal.css
//                                            ^ punctuation.section.group.end.less
//                                             ^ punctuation.terminator.rule.css

@var: 0;
// <- meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
//^^ meta.declaration.identifier.less variable.other.less
//  ^ meta.declaration.less punctuation.separator.key-value.css
//    ^ meta.declaration.value.less meta.number.integer.decimal.css constant.numeric.value.css
//     ^ punctuation.terminator.rule.css - meta.declaration
.class {
  @var: 1;
//^ meta.property-list.css meta.block.css meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
// ^^^ meta.property-list.css meta.block.css meta.declaration.identifier.less variable.other.less
//    ^ meta.declaration.less punctuation.separator.key-value.css
//      ^ meta.declaration.value.less meta.number.integer.decimal.css constant.numeric.value.css
//       ^ punctuation.terminator.rule.css - meta.declaration
  .brass {
    @var: 2;
//  ^ meta.property-list.css meta.block.css meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
//   ^^^ meta.property-list.css meta.block.css meta.declaration.identifier.less variable.other.less
//      ^ meta.declaration.less punctuation.separator.key-value.css
//        ^ meta.declaration.value.less meta.number.integer.decimal.css constant.numeric.value.css
//         ^ punctuation.terminator.rule.css - meta.declaration
    three: @var;
    @var: 3;
//  ^ meta.property-list.css meta.block.css meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
//   ^^^ meta.property-list.css meta.block.css meta.declaration.identifier.less variable.other.less
//      ^ meta.declaration.less punctuation.separator.key-value.css
//        ^ meta.declaration.value.less meta.number.integer.decimal.css constant.numeric.value.css
//         ^ punctuation.terminator.rule.css - meta.declaration
  }
  one: @var;
}

// ensure we don't confuse variables with @-keywords

    @pageColor: blue;
//  ^^^^^ - meta.at-rule

    @namespaceColor: pink;
//  ^^^^^^^^^^ - meta.at-rule

    @documentColor: pink;
//  ^^^^^^^^^ - meta.at-rule

    @importColor: pink;
//  ^^^^^^^ - meta.at-rule

    @keyframesColor: pink;
//  ^^^^^^^^^^ - meta.at-rule

    @supportsColor: pink;
//  ^^^^^^^^^ - meta.at-rule

//=============================================================================
// Variable Usage
//=============================================================================

@media only tv /*awesome*/ and (-webkit-max-width: @pixels) { }
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.media.css - meta.group
//                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.media.css meta.group.css
//                                                         ^^^^ meta.at-rule.media.css - meta.group
//     ^^^^ keyword.operator.logical.css
//          ^^ support.constant.media.css
//             ^^^^^^^^^^^ comment.block.css
//                         ^^^ keyword.operator.logical.css
//                             ^ punctuation.section.group.begin.css
//                              ^^^^^^^^ support.type.vendor-prefix.css
//                                      ^^^^^^^^^ support.type.property-name.css
//                                               ^ punctuation.separator.key-value.css
//                                                 ^^^^^^^ variable.other.less
//                                                        ^ punctuation.section.group.end.css

a, .link { color: @link-color; }
//       ^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//       ^ punctuation.section.block.begin.css
//         ^^^^^ meta.property-name.css support.type.property-name.css
//              ^ punctuation.separator.key-value.css
//               ^ meta.property-value.css - variable
//                ^^^^^^^^^^^ meta.property-value.css variable.other.less
//                ^ punctuation.definition.variable.less
//                           ^ punctuation.terminator.rule.css
//                             ^ punctuation.section.block.end.css

#id { width: @variable * ( @another-variable + 2 ); }
//          ^^^^^^^^^^^^^ meta.property-value.css - meta.group
//                       ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-value.css meta.group.less - meta.function-call
//           ^^^^^^^^^ variable.other.less
//                     ^ keyword.operator.arithmetic.less
//                       ^ punctuation.section.group.begin.less
//                         ^^^^^^^^^^^^^^^^^ variable.other.less
//                                           ^ keyword.operator.arithmetic.less
//                                             ^ constant.numeric.value.css
//                                               ^ punctuation.section.group.end.less
//                                                ^ meta.property-list.css meta.block.css punctuation.terminator.rule.css

//=============================================================================
// Variable Variables
// https://lesscss.org/features/#variables-feature-variable-variables
//=============================================================================

a, .link { color: @@color; }
//       ^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//       ^ punctuation.section.block.begin.css
//         ^^^^^ meta.property-name.css support.type.property-name.css
//              ^ punctuation.separator.key-value.css
//               ^ meta.property-value.css - variable
//                ^^^^^^^ meta.property-value.css variable.other.less
//                ^^ punctuation.definition.variable.less
//                       ^ punctuation.terminator.rule.css
//                         ^ punctuation.section.block.end.css

//=============================================================================
// Variable Interpolation
// https://lesscss.org/features/#variables-feature-variable-interpolation
//=============================================================================

@counter-style @{counter} {}
//^^^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.counter-style.css - meta.block
//                        ^^ meta.at-rule.counter-style.css meta.property-list.css meta.block.css
//^^^^^^^^^^^^ keyword.control.directive.css - punctuation
//             ^^^^^^^^^^ entity.other.counter-style-name.css meta.interpolation.less
//             ^ punctuation.definition.variable.less
//              ^ punctuation.section.interpolation.begin.less
//               ^^^^^^^ variable.other.less
//                      ^ punctuation.section.interpolation.end.less

@counter-style my-@{counter} {}
//^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.counter-style.css - meta.block
//                           ^^ meta.at-rule.counter-style.css meta.property-list.css meta.block.css
//^^^^^^^^^^^^ keyword.control.directive.css - punctuation
//             ^^^ entity.other.counter-style-name.css - meta.interpolation
//                ^^^^^^^^^^ entity.other.counter-style-name.css meta.interpolation.less
//                ^ punctuation.definition.variable.less
//                 ^ punctuation.section.interpolation.begin.less
//                  ^^^^^^^ variable.other.less
//                         ^ punctuation.section.interpolation.end.less

@counter-style my-@{counter}-name {}
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.counter-style.css - meta.block
//                                ^^ meta.at-rule.counter-style.css meta.property-list.css meta.block.css
//^^^^^^^^^^^^ keyword.control.directive.css - punctuation
//             ^^^ entity.other.counter-style-name.css - meta.interpolation
//                ^^^^^^^^^^ entity.other.counter-style-name.css meta.interpolation.less
//                ^ punctuation.definition.variable.less
//                 ^ punctuation.section.interpolation.begin.less
//                  ^^^^^^^ variable.other.less
//                         ^ punctuation.section.interpolation.end.less
//                          ^^^^^ entity.other.counter-style-name.css - meta.interpolation

@custom-media --@{custom}-media (width: 1px);
//            ^^ entity.other.custom-media.css - meta.interpolation
//              ^^^^^^^^^ entity.other.custom-media.css meta.interpolation.less
//                       ^^^^^^ entity.other.custom-media.css - meta.interpolation

@import "@{themes}/tidal-wave.less";
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.import.css
//      ^ meta.string.css string.quoted.double.css
//       ^^^^^^^^^ meta.string.css meta.interpolation.less - string
//                ^^^^^^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//      ^ punctuation.definition.string.begin.css
//       ^ punctuation.definition.variable.less
//        ^ punctuation.section.interpolation.begin.less
//         ^^^^^^ variable.other.less
//               ^ punctuation.section.interpolation.end.less

    @layer ut@{iliti}es ;
//  ^^^^^^^^^^^^^^^^^^^^ meta.at-rule.layer.css
//  ^ keyword.control.directive.css punctuation.definition.keyword.css
//   ^^^^^ keyword.control.directive.css - punctuation
//        ^ - keyword
//         ^^ entity.other.layer.css - meta.interpolation
//           ^^^^^^^^ entity.other.layer.css meta.interpolation.less
//                   ^^ entity.other.layer.css - meta.interpolation

    @layer @{utili}ties, @{framework}.@{layout}, { .foo { font-family: serif } };
//  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.layer.css - meta.block
//                                               ^^ meta.at-rule.layer.css meta.block.css - meta.property-list
//                                                 ^^^^^ meta.at-rule.layer.css meta.block.css meta.selector.css - meta.property-list
//                                                      ^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.layer.css meta.block.css meta.property-list.css meta.block.css
//                                                                            ^^ meta.at-rule.layer.css meta.block.css - meta.property-list.css
//  ^ keyword.control.directive.css punctuation.definition.keyword.css
//   ^^^^^ keyword.control.directive.css - punctuation
//        ^ - keyword
//         ^^^^^^^^^^^^ entity.other.layer.css - meta.path
//                     ^ punctuation.separator.sequence.css
//                       ^^^^^^^^^^^^^^^^^^^^^^ meta.path.css
//                       ^^^^^^^^^^^^ entity.other.layer.css meta.interpolation.less
//                                   ^ punctuation.accessor.dot.css - entity.other.layer
//                                    ^^^^^^^^^ entity.other.layer.css meta.interpolation.less
//                                             ^ punctuation.separator.sequence.css
//                                               ^ punctuation.section.block.begin.css
//                                                 ^^^^ entity.other.attribute-name.class.css
//                                                      ^ punctuation.section.block.begin.css
//                                                        ^^^^^^^^^^^ support.type.property-name.css
//                                                                   ^ punctuation.separator.key-value.css
//                                                                     ^^^^^ support.constant.property-value.css
//                                                                           ^ punctuation.section.block.end.css
//                                                                             ^ punctuation.section.block.end.css
//                                                                              ^ punctuation.terminator.rule.css

@{my-selector}
// <- meta.selector.css meta.interpolation.less punctuation.definition.variable.less
//^^^^^^^^^^^^ meta.selector.css meta.interpolation.less
//            ^ meta.selector.css - meta.interpolation
 // <- punctuation.section.interpolation.begin.less
//^^^^^^^^^^^ variable.other.less
//           ^ punctuation.section.interpolation.end.less

@{my-selector} {}
// <- meta.selector.css meta.interpolation.less punctuation.definition.variable.less
//^^^^^^^^^^^^ meta.selector.css meta.interpolation.less
//            ^ meta.selector.css - meta.interpolation
 // <- punctuation.section.interpolation.begin.less
//^^^^^^^^^^^ variable.other.less
//           ^ punctuation.section.interpolation.end.less

@{custom}-element.selector {}
// <- meta.selector.css meta.interpolation.less punctuation.definition.variable.less
//^^^^^^^ meta.selector.css meta.interpolation.less
//       ^^^^^^^^^^^^^^^^^^ meta.selector.css - meta.interpolation
//^^^^^^^^^^^^^^^ entity.name.tag.other.css
//^^^^^^ variable.other.less
//      ^ punctuation.section.interpolation.end.less
//               ^^^^^^^^^ entity.other.attribute-name.class.css
//               ^ punctuation.definition.entity.css

@{custom}-el·ment#selector {}
// <- meta.selector.css meta.interpolation.less punctuation.definition.variable.less
//^^^^^^^ meta.selector.css meta.interpolation.less
//       ^^^^^^^^^^^^^^^^^^ meta.selector.css - meta.interpolation
//^^^^^^^^^^^^^^^ entity.name.tag.other.css
//^^^^^^ variable.other.less
//      ^ punctuation.section.interpolation.end.less
//               ^^^^^^^^^ entity.other.attribute-name.id.css
//               ^ punctuation.definition.entity.css

@{custom}-element>sel·ctor {}
// <- meta.selector.css meta.interpolation.less punctuation.definition.variable.less
//^^^^^^^ meta.selector.css meta.interpolation.less
//       ^^^^^^^^^^^^^^^^^ meta.selector.css - meta.interpolation
//^^^^^^^^^^^^^^^ entity.name.tag.other.css
//^^^^^^ variable.other.less
//      ^ punctuation.section.interpolation.end.less
//               ^ keyword.operator.combinator.css - entity.name
//                ^^^^^^^^ entity.name.tag.other.css

custom-@{element}-selector {}
// <- meta.selector.css - meta.interpolation
//^^^^^ meta.selector.css - meta.interpolation
//     ^^^^^^^^^^ meta.selector.css meta.interpolation.less
//               ^^^^^^^^^^ meta.selector.css - meta.interpolation
//^^^^^^^^^^^^^^^^^^^^^^^^ entity.name.tag.other.css
//     ^ punctuation.definition.variable.less
//      ^ punctuation.section.interpolation.begin.less
//       ^^^^^^^ variable.other.less
//              ^ punctuation.section.interpolation.end.less

.@{my-selector} {}
// <- meta.selector.css entity.other.attribute-name.class.css punctuation.definition.entity.css
 // <- meta.selector.css meta.interpolation.less punctuation.definition.variable.less
//^^^^^^^^^^^^^ meta.selector.css meta.interpolation.less
//             ^ meta.selector.css - meta.interpolation
//^ punctuation.section.interpolation.begin.less
// ^^^^^^^^^^^ variable.other.less
//            ^ punctuation.section.interpolation.end.less

.@{selector}-class {}
// <- meta.selector.css entity.other.attribute-name.class.css punctuation.definition.entity.css
//^^^^^^^^^^ meta.selector.css entity.other.attribute-name.class.css meta.interpolation.less
//          ^^^^^^ meta.selector.css entity.other.attribute-name.class.css - meta.interpolation
//                ^ meta.selector.css - entity

.my-@{selector} {}
// <- meta.selector.css entity.other.attribute-name.class.css punctuation.definition.entity.css
//^^ meta.selector.css entity.other.attribute-name.class.css - meta.interpolation
//  ^^^^^^^^^^^ meta.selector.css entity.other.attribute-name.class.css meta.interpolation.less
//             ^ meta.selector.css - entity

.my-@{selector}-class {}
// <- meta.selector.css entity.other.attribute-name.class.css punctuation.definition.entity.css
//^^ meta.selector.css entity.other.attribute-name.class.css - meta.interpolation
//  ^^^^^^^^^^^ meta.selector.css entity.other.attribute-name.class.css meta.interpolation.less
//             ^^^^^^ meta.selector.css entity.other.attribute-name.class.css - meta.interpolation
//                   ^ meta.selector.css - entity

#@{my-selector} {}
// <- meta.selector.css entity.other.attribute-name.id.css punctuation.definition.entity.css
 // <- meta.selector.css meta.interpolation.less punctuation.definition.variable.less
//^^^^^^^^^^^^^ meta.selector.css meta.interpolation.less
//             ^ meta.selector.css - meta.interpolation
//^ punctuation.section.interpolation.begin.less
// ^^^^^^^^^^^ variable.other.less
//            ^ punctuation.section.interpolation.end.less

#@{selector}-id {}
// <- meta.selector.css entity.other.attribute-name.id.css punctuation.definition.entity.css
//^^^^^^^^^^ meta.selector.css entity.other.attribute-name.id.css meta.interpolation.less
//          ^^^ meta.selector.css entity.other.attribute-name.id.css - meta.interpolation
//             ^ meta.selector.css - entity

#my-@{selector} {}
// <- meta.selector.css entity.other.attribute-name.id.css punctuation.definition.entity.css
//^^ meta.selector.css entity.other.attribute-name.id.css - meta.interpolation
//  ^^^^^^^^^^^ meta.selector.css entity.other.attribute-name.id.css meta.interpolation.less
//             ^ meta.selector.css - entity

#my-@{selector}-id {}
// <- meta.selector.css entity.other.attribute-name.id.css punctuation.definition.entity.css
//^^ meta.selector.css entity.other.attribute-name.id.css - meta.interpolation
//  ^^^^^^^^^^^ meta.selector.css entity.other.attribute-name.id.css meta.interpolation.less
//             ^^^ meta.selector.css entity.other.attribute-name.id.css - meta.interpolation
//                ^ meta.selector.css - entity

:@{pseudo} {}
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^^^^^^^ meta.selector.css entity.other.pseudo-class.css meta.interpolation.less
//        ^ meta.selector.css - entity

:@{pseudo}-class {}
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^^^^^^^ meta.selector.css entity.other.pseudo-class.css meta.interpolation.less
//        ^^^^^^ meta.selector.css entity.other.pseudo-class.css - meta.interpolation
//              ^ meta.selector.css - entity

:my-@{pseudo} {}
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^ meta.selector.css entity.other.pseudo-class.css - meta.interpolation
//  ^^^^^^^^^ meta.selector.css entity.other.pseudo-class.css meta.interpolation.less
//           ^ meta.selector.css - entity

:my-@{pseudo}-class {}
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^ meta.selector.css entity.other.pseudo-class.css - meta.interpolation
//  ^^^^^^^^^ meta.selector.css entity.other.pseudo-class.css meta.interpolation.less
//           ^^^^^^ meta.selector.css entity.other.pseudo-class.css - meta.interpolation
//                 ^ meta.selector.css - entity

:@{pseudo}(@{arg}) {}
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-class.css meta.interpolation.less
//        ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.begin.css
//         ^^^^^^ meta.selector.css meta.function-call.arguments.css meta.group.css meta.interpolation.less
//               ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.end.css
//                ^ meta.selector.css - entity

:@{pseudo}-class(@{arg}) {}
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-class.css meta.interpolation.less
//        ^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-class.css - meta.interpolation
//              ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.begin.css
//               ^^^^^^ meta.selector.css meta.function-call.arguments.css meta.group.css meta.interpolation.less
//                     ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.end.css
//                      ^ meta.selector.css - entity

:my-@{pseudo}(@{arg}) {}
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-class.css - meta.interpolation
//  ^^^^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-class.css meta.interpolation.less
//           ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.begin.css
//            ^^^^^^ meta.selector.css meta.function-call.arguments.css meta.group.css meta.interpolation.less
//                  ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.end.css
//                   ^ meta.selector.css - entity

:my-@{pseudo}-class(@{arg}) {}
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-class.css - meta.interpolation
//  ^^^^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-class.css meta.interpolation.less
//           ^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-class.css - meta.interpolation
//                 ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.begin.css
//                  ^^^^^^ meta.selector.css meta.function-call.arguments.css meta.group.css meta.interpolation.less
//                        ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.end.css
//                         ^ meta.selector.css - entity

::@{pseudo} {}
// <- meta.selector.css punctuation.definition.pseudo-element.css
//^^^^^^^^^ meta.selector.css entity.other.pseudo-element.css meta.interpolation.less
//         ^ meta.selector.css - entity

::@{pseudo}-element {}
// <- meta.selector.css punctuation.definition.pseudo-element.css
//^^^^^^^^^ meta.selector.css entity.other.pseudo-element.css meta.interpolation.less
//         ^^^^^^^^ meta.selector.css entity.other.pseudo-element.css - meta.interpolation
//                 ^ meta.selector.css - entity

::my-@{pseudo} {}
// <- meta.selector.css punctuation.definition.pseudo-element.css
//^^^ meta.selector.css entity.other.pseudo-element.css - meta.interpolation
//   ^^^^^^^^^ meta.selector.css entity.other.pseudo-element.css meta.interpolation.less
//            ^ meta.selector.css - entity

::my-@{pseudo}-element {}
// <- meta.selector.css punctuation.definition.pseudo-element.css
//^^^ meta.selector.css entity.other.pseudo-element.css - meta.interpolation
//   ^^^^^^^^^ meta.selector.css entity.other.pseudo-element.css meta.interpolation.less
//            ^^^^^^^^ meta.selector.css entity.other.pseudo-element.css - meta.interpolation
//                    ^ meta.selector.css - entity

::@{pseudo}(@{arg}) {}
// <- meta.selector.css punctuation.definition.pseudo-element.css
//^^^^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-element.css meta.interpolation.less
//         ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.begin.css
//          ^^^^^^ meta.selector.css meta.function-call.arguments.css meta.group.css meta.interpolation.less
//                ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.end.css
//                 ^ meta.selector.css - entity

::@{pseudo}-element(@{arg}) {}
// <- meta.selector.css punctuation.definition.pseudo-element.css
//^^^^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-element.css meta.interpolation.less
//         ^^^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-element.css - meta.interpolation
//                 ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.begin.css
//                  ^^^^^^ meta.selector.css meta.function-call.arguments.css meta.group.css meta.interpolation.less
//                        ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.end.css
//                         ^ meta.selector.css - entity

::my-@{pseudo}(@{arg}) {}
// <- meta.selector.css punctuation.definition.pseudo-element.css
//^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-element.css - meta.interpolation
//   ^^^^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-element.css meta.interpolation.less
//            ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.begin.css
//             ^^^^^^ meta.selector.css meta.function-call.arguments.css meta.group.css meta.interpolation.less
//                   ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.end.css
//                    ^ meta.selector.css - entity

::my-@{pseudo}-element(@{arg}) {}
// <- meta.selector.css punctuation.definition.pseudo-element.css
//^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-element.css - meta.interpolation
//   ^^^^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-element.css meta.interpolation.less
//            ^^^^^^^^ meta.selector.css meta.function-call.identifier.css entity.other.pseudo-element.css - meta.interpolation
//                    ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.begin.css
//                     ^^^^^^ meta.selector.css meta.function-call.arguments.css meta.group.css meta.interpolation.less
//                           ^ meta.selector.css meta.function-call.arguments.css meta.group.css punctuation.section.group.end.css
//                            ^ meta.selector.css - entity

    [@{key}=value] {}
//  ^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//  ^ punctuation.section.brackets.begin.css
//   ^^^^^^ entity.other.attribute-name.css meta.interpolation.less
//         ^ keyword.operator.logical.css
//          ^^^^^ meta.string.css string.unquoted.css
//               ^ punctuation.section.brackets.end.css

    [my-@{key}=value] {}
//  ^^^^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//  ^ punctuation.section.brackets.begin.css
//   ^^^ entity.other.attribute-name.css - meta.interpolation
//      ^^^^^^ entity.other.attribute-name.css meta.interpolation.less
//            ^ keyword.operator.logical.css
//             ^^^^^ meta.string.css string.unquoted.css
//                  ^ punctuation.section.brackets.end.css

    [my-@{key}-class=value] {}
//  ^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//  ^ punctuation.section.brackets.begin.css
//   ^^^ entity.other.attribute-name.css - meta.interpolation
//      ^^^^^^ entity.other.attribute-name.css meta.interpolation.less
//            ^^^^^^ entity.other.attribute-name.css - meta.interpolation
//                  ^ keyword.operator.logical.css
//                   ^^^^^ meta.string.css string.unquoted.css
//                        ^ punctuation.section.brackets.end.css

    [key=@{value}]
//  ^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//       ^^^^^^^^ meta.string.css string.unquoted.css meta.interpolation.less

    [key=@{value}--value]
//  ^^^^^^^^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//       ^^^^^^^^ meta.string.css string.unquoted.css meta.interpolation.less
//               ^^^^^^^ meta.string.css string.unquoted.css - meta.interpolation

    [key=my-@{value}]
//  ^^^^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//       ^^^ meta.string.css string.unquoted.css - meta.interpolation
//          ^^^^^^^^ meta.string.css string.unquoted.css meta.interpolation.less

    [key=my-@{value}-value]
//  ^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//       ^^^ meta.string.css string.unquoted.css - meta.interpolation
//          ^^^^^^^^ meta.string.css string.unquoted.css meta.interpolation.less
//                  ^^^^^^ meta.string.css string.unquoted.css - meta.interpolation

.nested-selector-interpolation-tests {

  @{selector} {
//^^^^^^^^^^^ meta.selector.css meta.interpolation.less
//           ^ meta.selector.css - meta.interpolation
//            ^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css

    @{property}: @{value};
//  ^^^^^^^^^^^ meta.property-name.css meta.interpolation.less
//             ^ - meta.property-name - meta.property-value
//              ^ meta.property-value.css - meta.interpolation
//               ^^^^^^^^ meta.property-value.css meta.interpolation.less
//                       ^ - meta.property-value

    &@{suffix} > &su@{ff}ix;
//  ^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css
//  ^ entity.other.attribute-name.css variable.language.parent.less
//   ^^^^^^^^^ entity.other.attribute-name.css meta.interpolation.less
//             ^ keyword.operator.combinator.css
//               ^ entity.other.attribute-name.css variable.language.parent.less
//                ^^ entity.other.attribute-name.css - meta.interpolation
//                  ^^^^^ entity.other.attribute-name.css meta.interpolation.less
//                       ^^ entity.other.attribute-name.css - meta.interpolation
  }
}

.property-interpolation-tests {

  @{property}: #0ee;
//^^^^^^^^^^^ meta.property-name.css meta.interpolation.less
//           ^ meta.property-list.css meta.block.css punctuation.separator.key-value.css
//            ^^^^^ meta.property-list.css meta.block.css meta.property-value.css

  -@{property}: @{value};
//^ meta.property-name.css support.type.property-name.css - meta.interpolation
// ^^^^^^^^^^^ meta.property-name.css meta.interpolation.less
//            ^ - meta.property-name - meta.property-value
//             ^ meta.property-value.css - meta.interpolation
//              ^^^^^^^^ meta.property-value.css meta.interpolation.less
//                      ^ - meta.property-value

  --@{property}: @{value};
//^^ meta.property-name.css entity.other.custom-property.css - meta.interpolation
//  ^^^^^^^^^^^ meta.property-name.css meta.interpolation.less
//             ^ - meta.property-name - meta.property-value
//              ^ meta.property-value.css - meta.interpolation
//               ^^^^^^^^ meta.property-value.css meta.interpolation.less
//                       ^ - meta.property-value

  background-@{property}: #999;
//^^^^^^^^^^^ meta.property-name.css support.type.property-name.css - meta.interpolation
//           ^^^^^^^^^^^ meta.property-name.css meta.interpolation.less
//                      ^ - meta.property-name - meta.property-value
//                       ^^^^^ meta.property-value.css - meta.interpolation
//                            ^ - meta.property-value

  @{property}-color: #999;
//^^^^^^^^^^^ meta.property-name.css meta.interpolation.less
//           ^^^^^^ meta.property-name.css support.type.property-name.css - meta.interpolation
//                 ^ - meta.property-name - meta.property-value
//                  ^^^^^ meta.property-value.css - meta.interpolation
//                       ^ - meta.property-value

  @{property}--color: #999;
//^^^^^^^^^^^ meta.property-name.css meta.interpolation.less
//           ^^^^^^^ meta.property-name.css support.type.property-name.css - meta.interpolation
//                  ^ - meta.property-name - meta.property-value
//                   ^^^^^ meta.property-value.css - meta.interpolation
//                        ^ - meta.property-value

  background: url("@{images}/white-sand.png");
//            ^^^ meta.function-call.identifier.css support.function.url.css
//               ^ meta.function-call.arguments.css meta.group.css
//                ^ meta.function-call.arguments.css meta.group.css meta.string.css string.quoted.double.css
//                 ^^^^^^^^^ meta.function-call.arguments.css meta.group.css meta.path.url.css meta.string.css meta.interpolation.less
//                          ^^^^^^^^^^^^^^^^ meta.function-call.arguments.css meta.group.css meta.string.css string.quoted.double.css
//                                          ^ meta.function-call.arguments.css meta.group.css
//                                           ^ - meta.function-call
//               ^ punctuation.section.group.begin.css
//                ^ punctuation.definition.string.begin.css
//                 ^ punctuation.definition.variable.less
//                  ^ punctuation.section.interpolation.begin.less
//                   ^^^^^^ variable.other.less
//                         ^ punctuation.section.interpolation.end.less
//                          ^ punctuation.separator.path.css
//                                         ^ punctuation.definition.string.end.css
//                                          ^ punctuation.section.group.end.css
//                                           ^ punctuation.terminator.rule.css

  attrib: attr( /**/ n@{am}e|@{sp}ace|*|f@{o}o @unit red );
//        ^^^^ meta.function-call.identifier.css support.function.attr.css
//            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.css meta.group.css
//            ^ punctuation.section.group.begin.css
//              ^^^^ comment.block.css
//                   ^^^^^^^ entity.other.namespace-prefix.css
//                          ^ punctuation.separator.namespace.css
//                           ^^^^^^^^ entity.other.namespace-prefix.css
//                                   ^ punctuation.separator.namespace.css
//                                    ^ variable.language.wildcard.asterisk.css
//                                     ^ punctuation.separator.namespace.css
//                                      ^^^^^^ entity.other.attribute-name.css
//                                             ^^^^^ variable.other.less
//                                                   ^^^ support.constant.color.w3c.standard.css
//                                                       ^ punctuation.section.group.end.css
}

//=============================================================================
// Maps
// https://lesscss.org/features/#maps-feature
//=============================================================================

@sizes: {
// <- meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
//^^^^ meta.declaration.identifier.less variable.other.less
//    ^^ meta.declaration
//    ^ meta.declaration.less punctuation.separator.key-value.css
//      ^^ meta.property-list.css meta.block.css
//      ^ punctuation.section.block.begin.css
  mobile: 320px;
  tablet: 768px;
  desktop: 1024px;
}
// <- meta.property-list.css meta.block.css punctuation.section.block.end.css

.navbar {
  display: block;
//^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//^^^^^^^ meta.property-name.css support.type.property-name.css
//        ^ meta.property-value.css - support
//         ^^^^^ meta.property-value.css support.constant.property-value.css
//              ^ punctuation.terminator.rule.css

  @media (min-width: @sizes[tablet]) {
//^^^^^^^ meta.property-list.css meta.block.css meta.at-rule.media.css - meta.group
//       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.at-rule.media.css meta.group.css
//       ^ punctuation.section.group.begin.css
//        ^^^^^^^^^ support.type.property-name.css
//                 ^ punctuation.separator.key-value.css
//                   ^^^^^^ variable.other.less
//                         ^^^^^^^^ meta.attribute-selector.css meta.brackets.css
//                         ^ punctuation.section.brackets.begin.css
//                          ^^^^^^ entity.other.attribute-name.css
//                                ^ punctuation.section.brackets.end.css
//                                 ^ punctuation.section.group.end.css
    display: inline-block;
// ^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.at-rule.media.css meta.block.css
//  ^^^^^^^ meta.property-name.css support.type.property-name.css
//         ^ punctuation.separator.key-value.css
//          ^ meta.property-value.css - support
//           ^^^^^^^^^^^^ meta.property-value.css support.constant.property-value.css
//                       ^ punctuation.terminator.rule.css
  }
//^ meta.property-list.css meta.block.css meta.at-rule.media.css meta.block.css punctuation.section.block.end.css
}
// <- meta.property-list.css meta.block.css punctuation.section.block.end.css

.button when (@config[library-on] = true) { prop: val; }
// ^^^^^ meta.selector.css - meta.guard
//      ^^^^^ meta.selector.css meta.guard.less - meta.group
//           ^^^^^^^^ meta.selector.css meta.guard.less meta.group.less
//                   ^^^^^^^^^^^^ meta.selector.css meta.guard.less meta.group.less meta.brackets.css
//                               ^^^^^^^^ meta.selector.css meta.guard.less meta.group.less
//                                       ^ meta.selector.css meta.guard.less - meta.group
//                                        ^^^^^^^^^^^^^^ meta.property-list.css meta.block.css - meta.selector - meta.guard
//           ^ punctuation.section.group.begin.less
//            ^^^^^^^ variable.other.less
//                   ^ punctuation.section.brackets.begin.css
//                    ^^^^^^^^^^ entity.other.attribute-name.css
//                              ^ punctuation.section.brackets.end.css
//                                ^ keyword.operator.comparison.less
//                                  ^^^^ support.constant.property-value.css
//                                      ^ punctuation.section.group.end.less

// namespaced maps

#library { @colors: { primary: red; secondary: green } }
// <- meta.selector.css entity.other.attribute-name.id.css punctuation.definition.entity.css
//^^^^^^^ meta.selector.css
//       ^^ meta.property-list.css meta.block.css - meta.declaration
//         ^^^^^^^ meta.property-list.css meta.block.css meta.declaration.identifier.less variable.other.less
//                ^ meta.property-list.css meta.block.css meta.declaration.less punctuation.separator.key-value.css
//                 ^ meta.property-list.css meta.block.css meta.declaration.value.less - meta.property-list meta.property-list
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.declaration.value.less meta.property-list.css meta.block.css
//                                                    ^^ meta.property-list.css meta.block.css - meta.property-list meta.property-list

.button {
  color: #colors[primary];
//       ^^^^^^^ meta.mixin.less
//              ^^^^^^^^^ meta.mixin.item-access.less meta.brackets.less
//       ^^^^^^^ entity.other.attribute-name.id.css
//       ^ punctuation.definition.entity.css
//              ^ punctuation.section.brackets.begin.less
//               ^^^^^^^ constant.other.property-name.less
//                      ^ punctuation.section.brackets.end.less

  color: #library.colors[primary];
//      ^ meta.property-list.css meta.block.css meta.property-value.css - meta.mixin
//       ^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css meta.mixin.less - meta.attribute-selector
//                      ^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css meta.mixin.item-access.less meta.brackets.less
//       ^ punctuation.definition.entity.css
//       ^^^^^^^^ entity.other.attribute-name.id.css
//               ^ punctuation.definition.entity.css
//               ^^^^^^^ entity.other.attribute-name.class.css
//                      ^ punctuation.section.brackets.begin.less
//                       ^^^^^^^ constant.other.property-name.less
//                              ^ punctuation.section.brackets.end.less
//                               ^ punctuation.terminator.rule.css

  border: 1px solid .colors[@secondary];
//                  ^^^^^^^ meta.mixin.less
//                         ^^^^^^^^^^^^ meta.mixin.item-access.less meta.brackets.less
//                  ^^^^^^^ entity.other.attribute-name.class.css
//                  ^ punctuation.definition.entity.css
//                         ^ punctuation.section.brackets.begin.less
//                          ^^^^^^^^^^ variable.other.less
//                          ^ punctuation.definition.variable.less
//                                    ^ punctuation.section.brackets.end.less

  // make sure not to conflict with CSS grid line name lists
  grid: [linename1] "a" 100px [linename2];
//^^^^ meta.property-list.css meta.property-name.css
//     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.property-value.css
//^^^^ support.type.property-name.css
//    ^ punctuation.separator.key-value.css
//      ^ punctuation.section.brackets.begin.css
//       ^^^^^^^^^ meta.string.css string.unquoted.line-name.css
//                ^ punctuation.section.brackets.end.css
//                  ^^^ meta.string.css string.quoted.double.css
//                      ^^^^^ meta.number.integer.decimal.css
//                            ^ punctuation.section.brackets.begin.css
//                             ^^^^^^^^^ meta.string.css string.unquoted.line-name.css
//                                      ^ punctuation.section.brackets.end.css
}

//=============================================================================
// Parent Selectors
// https://lesscss.org/features/#parent-selectors-feature
//=============================================================================

a { color: blue; &:hover { color: green; } }
//               ^^^^^^^^ meta.selector.css
//               ^ entity.other.attribute-name.css variable.language.parent.less
//                ^ punctuation.definition.pseudo-class.css
//                 ^^^^^ entity.other.pseudo-class.css

.link {
  & + & { color: red; }
//^^^^^^ meta.selector.css
//^ variable.language.parent.less
//  ^ keyword.operator.combinator.css
//    ^ variable.language.parent.less

  & > & { color: red; }
//^^^^^^ meta.selector.css
//^ variable.language.parent.less
//  ^ keyword.operator.combinator.css
//    ^ variable.language.parent.less

  & & { color: green; }
//^^^^ meta.selector.css
//^ variable.language.parent.less
//  ^ variable.language.parent.less

  && { color: blue; }
//^^^ meta.selector.css
//^^ variable.language.parent.less

  &, &ish { color: cyan; }
//^^^^^^^^ meta.selector.css
//^ variable.language.parent.less
// ^ punctuation.separator.sequence.css
//   ^ variable.language.parent.less
//   ^^^^ entity.other.attribute-name.css

  &-bemish { &--bar { &_baz }  }
//^^^^^^^^^ meta.property-list.css meta.block.css meta.selector.css
//         ^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//           ^^^^^^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.selector.css
//                  ^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//                    ^^^^^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.selector.css
//                          ^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.property-list.css meta.block.css - meta.selector
//                           ^^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css - meta.selector
//^ variable.language.parent.less
//^^^^^^^^ entity.other.attribute-name.css
//           ^ variable.language.parent.less
//           ^^^^^^ entity.other.attribute-name.css
//                    ^ variable.language.parent.less
//                    ^^^^^ entity.other.attribute-name.css
}

//=============================================================================
// Extend Syntax
// https://lesscss.org/features/#extend-feature
//=============================================================================

.a:extend(.b) {}
//^^^^^^^^^^^^ meta.selector.css
//^ punctuation.definition.pseudo-class.css
// ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//       ^^^^ meta.function-call.arguments.less meta.group.less
//       ^ punctuation.section.group.begin.less
//        ^^ entity.other.attribute-name.class.css
//        ^ punctuation.definition.entity.css
//          ^ punctuation.section.group.end.less
//            ^ punctuation.section.block.begin.css
//             ^ punctuation.section.block.end.css

// the above block does the same thing as the below block
.a { &:extend(.b); }
//   ^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.selector.css
//   ^ variable.language.parent.less
//    ^ punctuation.definition.pseudo-class.css
//     ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//           ^^^^ meta.function-call.arguments.less meta.group.less
//           ^ punctuation.section.group.begin.less
//            ^^ entity.other.attribute-name.class.css
//            ^ punctuation.definition.entity.css
//              ^ punctuation.section.group.end.less
//               ^ punctuation.terminator.rule.css

// Extend after the selector
pre:hover:extend(div pre) {}
//^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css
// ^ punctuation.definition.pseudo-class.css
//  ^^^^^ entity.other.pseudo-class.css
//       ^ punctuation.definition.pseudo-class.css
//        ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//              ^^^^^^^^^ meta.function-call.arguments.less meta.group.less

// Space between selector and extend is allowed
pre:hover :extend(div pre) {}
//^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css
// ^ punctuation.definition.pseudo-class.css
//  ^^^^^ entity.other.pseudo-class.css
//        ^ punctuation.definition.pseudo-class.css
//         ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//               ^^^^^^^^^ meta.function-call.arguments.less meta.group.less

// Multiple extends are allowed
pre:hover:extend(div pre):extend(.bucket tr) {}
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css
// ^ punctuation.definition.pseudo-class.css
//  ^^^^^ entity.other.pseudo-class.css
//       ^ punctuation.definition.pseudo-class.css
//        ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//              ^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                       ^ punctuation.definition.pseudo-class.css
//                        ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//                              ^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less

pre:hover, .some-class { &:extend(div pre); }
//^^^^^^^^^^^^^^^^^^^^^ meta.selector.css
//                     ^^ - meta.selector
//                       ^^^^^^^^^^^^^^^^^ meta.selector.css
// ^ punctuation.definition.pseudo-class.css
//  ^^^^^ entity.other.pseudo-class.css
//       ^ punctuation.separator.sequence.css
//         ^^^^^^^^^^^ entity.other.attribute-name.class.css
//                       ^ variable.language.parent.less
//                        ^ punctuation.definition.pseudo-class.css
//                         ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//                               ^^^^^^^^^ meta.function-call.arguments.less meta.group.less

pre:hover:extend(div pre), .some-class:extend(div pre) {}
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css
// ^ punctuation.definition.pseudo-class.css
//  ^^^^^ entity.other.pseudo-class.css
//       ^ punctuation.definition.pseudo-class.css
//        ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//              ^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                       ^ punctuation.separator.sequence.css
//                         ^^^^^^^^^^^ entity.other.attribute-name.class.css
//                                    ^ punctuation.definition.pseudo-class.css
//                                     ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//                                           ^^^^^^^^^ meta.function-call.arguments.less meta.group.less

// nth Expression

  :nth-child(1n+3) {}
//^^^^^^^^^^^^^^^^^ meta.selector.css
//^ punctuation.definition.pseudo-class.css
// ^^^^^^^^^ meta.function-call.identifier.css entity.other.pseudo-class.css
//          ^^^^^^ meta.function-call.arguments.css meta.group.css
//          ^ punctuation.section.group.begin.css
//           ^ meta.number.integer.decimal.css constant.numeric.value.css
//            ^ meta.number.integer.decimal.css constant.numeric.suffix.css
//             ^ meta.number.integer.decimal.css keyword.operator.arithmetic.css
//              ^ meta.number.integer.decimal.css constant.numeric.value.css
//               ^ punctuation.section.group.end.css

.child:extend(:nth-child(n+3)) {}
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css
//^^^^ entity.other.attribute-name.class.css
//    ^ punctuation.definition.pseudo-class.css
//     ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//           ^^ meta.function-call.arguments.less meta.group.less - meta.function-call.arguments meta.group meta.function-call.arguments meta.group
//             ^^^^^^^^^ meta.function-call.arguments.less meta.group.less meta.function-call.identifier.css
//                      ^^^^^ meta.function-call.arguments.less meta.group.less meta.function-call.arguments.css meta.group.css
//                           ^ meta.function-call.arguments.less meta.group.less - meta.function-call.arguments meta.group meta.function-call.arguments meta.group
//           ^ punctuation.section.group.begin.less
//            ^ punctuation.definition.pseudo-class.css
//             ^^^^^^^^^ entity.other.pseudo-class.css
//                      ^ punctuation.section.group.begin.css
//                          ^ punctuation.section.group.end.css
//                           ^ punctuation.section.group.end.less

.replacement:extend(.test all) {}
//                        ^^^ keyword.other.all.less

@{variable}:extend(.bucket) {}
//^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css
//^^^^^^^^^ meta.interpolation.less
//         ^ punctuation.definition.pseudo-class.css
//          ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//                ^^^^^^^^^ meta.function-call.arguments.less meta.group.less

@media print {
  .screenClass:extend(.selector) {} // extend inside media
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.media.css meta.block.css meta.selector.css
//^^^^^^^^^^^^ entity.other.attribute-name.class.css
//            ^ punctuation.definition.pseudo-class.css
//             ^^^^^^ meta.function-call.identifier.less entity.other.pseudo-class.less
//                   ^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
}

//=============================================================================
// Attribute Selectors
//=============================================================================

  [title=identifier] {}
//^^^^^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//^ punctuation.section.brackets.begin.css
// ^^^^^ entity.other.attribute-name.css
//      ^ keyword.operator.logical.css
//       ^^^^^^^^^^ meta.string.css string.unquoted.css
//                 ^ punctuation.section.brackets.end.css
  [title='identifier'] {}
//^^^^^^^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//^ punctuation.section.brackets.begin.css
// ^^^^^ entity.other.attribute-name.css
//      ^ keyword.operator.logical.css
//       ^^^^^^^^^^^^ meta.string.css string.quoted.single.css
//                   ^ punctuation.section.brackets.end.css
  [title="identifier"] {}
//^^^^^^^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//^ punctuation.section.brackets.begin.css
// ^^^^^ entity.other.attribute-name.css
//      ^ keyword.operator.logical.css
//       ^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//                   ^ punctuation.section.brackets.end.css

  :not( [title="identifier"] ) {}
//^^^^ meta.selector.css - meta.group
//    ^^ meta.selector.css meta.function-call.arguments.css meta.group.css - meta.brackets
//      ^^^^^^^^^^^^^^^^^^^^ meta.selector.css meta.group.css meta.attribute-selector.css meta.brackets.css
//                          ^^ meta.selector.css meta.function-call.arguments.css meta.group.css - meta.brackets
//                            ^ meta.selector.css - meta.group

  [data-type="text"]:hover,
//^^^^^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//                  ^^^^^^^^ meta.selector.css
//                  ^ punctuation.definition.pseudo-class.css
//                   ^^^^^ entity.other.pseudo-class.css
//                        ^ punctuation.separator.sequence.css
  [data-type="text"]:active {}
//^^^^^^^^^^^^^^^^^^ meta.selector.css meta.attribute-selector.css meta.brackets.css
//                  ^^^^^^^^ meta.selector.css
//                          ^^ meta.property-list.css meta.block.css - meta.selector
//                  ^ punctuation.definition.pseudo-class.css
//                   ^^^^^^ entity.other.pseudo-class.css

//=============================================================================
// Merge
// https://lesscss.org/features/#merge-feature
//=============================================================================

.mixin() {
// <- meta.selector.css entity.other.attribute-name.class.css punctuation.definition.entity.css
//^^^^ meta.selector.css entity.other.attribute-name.class.css
//    ^^ meta.selector.parameters.css meta.group.less
//      ^ meta.selector.css - meta.function-call
  box-shadow+: inset 0 0 10px #555;
//^^^^^^^^^^ meta.property-name.css
//          ^^ - meta.property-name - meta.property-value
//            ^^^^^^^^^^^^^^^^^^^^ meta.property-value.css
//^^^^^^^^^^ support.type.property-name.css
//          ^ keyword.operator.merge.less
//           ^ punctuation.separator.key-value.css

  font-family+_: monospace;
//^^^^^^^^^^^ support.type.property-name.css
//           ^^ keyword.operator.merge.less
//             ^ punctuation.separator.key-value.css
//               ^^^^^^^^^ support.constant.property-value.css
//                        ^ punctuation.terminator.rule.css
}

.myclass {
  .mixin();
//^^^^^^ meta.mixin.less entity.other.attribute-name.class.css
//      ^^ meta.mixin.arguments.less meta.group.less
  box-shadow+: 0 0 20px black; // merge with comma
//^^^^^^^^^^ meta.property-name.css
//          ^^ - meta.property-name - meta.property-value
//            ^^^^^^^^^^^^^^^ meta.property-value.css
//^^^^^^^^^^ support.type.property-name.css
//          ^ keyword.operator.merge.less
//           ^ punctuation.separator.key-value.css

  font-family+_: Helvetica @my_font; // merge with space
//^^^^^^^^^^^ meta.property-name.css
//           ^^^ - meta.property-name - meta.property-value
//              ^^^^^^^^^^^^^^^^^^^ meta.property-value.css
//^^^^^^^^^^^ support.type.property-name.css
//           ^^ keyword.operator.merge.less
//             ^ punctuation.separator.key-value.css
//               ^^^^^^^^^ meta.string.css string.unquoted.css
//                         ^^^^^^^^ variable.other.less
//                                 ^ punctuation.terminator.rule.css

  // match as selector if property name is missing

  +_: value;
//^^^^^^^^^ meta.property-list.css meta.block.css meta.selector.css
//         ^ meta.property-list.css meta.block.css - meta.selector
//^ keyword.operator.combinator.css
//  ^ punctuation.definition.pseudo-class.css
//         ^ punctuation.terminator.rule.css
}

//=============================================================================
// Mixin
// https://lesscss.org/features/#mixins-feature
//=============================================================================

.a, #b { color: red; }
// <- meta.selector.css entity.other.attribute-name.class.css punctuation.definition.entity.css
 // <- meta.selector.css entity.other.attribute-name.class.css
//^^^^^ meta.selector.css
//^ punctuation.separator.sequence.css
//  ^^ entity.other.attribute-name.id.css
//  ^ punctuation.definition.entity.css

.mixin-class { .a(); }
//           ^^^^^^^^^ meta.property-list.css meta.block.css
//             ^^ meta.block.css meta.mixin.less
//               ^^ meta.mixin.arguments.less meta.group.less
//             ^ punctuation.definition.entity.css
//             ^^ entity.other.attribute-name.class.css
//               ^ meta.group.less punctuation.section.group.begin.less
//                ^ meta.group.less punctuation.section.group.end.less

.mixin-id { #b(); }
//        ^^^^^^^^^ meta.property-list.css meta.block.css
//          ^^ meta.block.css meta.mixin.less
//            ^^ meta.mixin.arguments.less meta.group.less
//          ^ punctuation.definition.entity.css
//          ^^ entity.other.attribute-name.id.css
//            ^ meta.group.less punctuation.section.group.begin.less
//             ^ meta.group.less punctuation.section.group.end.less

//=============================================================================
// Selectors in Mixins
// https://lesscss.org/features/#mixins-feature-selectors-in-mixins
//=============================================================================

.my-hover-mixin() {
  &:hover { border: 1px solid red; }
//^^^^^^^^ meta.property-list.css meta.block.css meta.selector.css - meta.property-list.css meta.property-list.css
//        ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//^ variable.language.parent.less
// ^ punctuation.definition.pseudo-class.css
//  ^^^^^ entity.other.pseudo-class.css
}
// <- meta.property-list.css meta.block.css punctuation.section.block.end.css

button {
  .my-hover-mixin();
//^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.less - meta.group
//               ^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less
//^^^^^^^^^^^^^^^ entity.other.attribute-name.class.css
//               ^ punctuation.section.group.begin.less
//                ^ punctuation.section.group.end.less
}

//=============================================================================
// Namespaces
// https://lesscss.org/features/#mixins-feature-namespaces
//=============================================================================

// namespaced property definition

#outer() { .inner { color: red; } }
// <- meta.selector.css entity.other.attribute-name.id.css punctuation.definition.entity.css
//^^^^ meta.selector.css - meta.group
//    ^^ meta.selector.parameters.css meta.group.less
//      ^ meta.selector.css - meta.group
//^^^^ entity.other.attribute-name.id.css

.c { #outer.inner(); } // preferred
// ^^ meta.property-list.css meta.block.css - meta.selector
//   ^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.less - meta.group
//               ^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less
//                 ^^^ meta.property-list.css meta.block.css - meta.selector
// ^ punctuation.section.block.begin.css
//   ^^^^^^ entity.other.attribute-name.id.css
//         ^ punctuation.definition.entity.css
//         ^^^^^^ entity.other.attribute-name.class.css
//               ^ punctuation.section.group.begin.less
//                ^ punctuation.section.group.end.less
//                 ^ punctuation.terminator.rule.css
//                   ^ punctuation.section.block.end.css

.c { #outer .inner(); } // deprecated
// ^^ meta.property-list.css meta.block.css - meta.selector
//   ^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.less - meta.group
//                ^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less
//                  ^^^ meta.property-list.css meta.block.css - meta.selector
// ^ punctuation.section.block.begin.css
//   ^^^^^^ entity.other.attribute-name.id.css
//          ^ punctuation.definition.entity.css
//          ^^^^^^ entity.other.attribute-name.class.css
//                ^ punctuation.section.group.begin.less
//                 ^ punctuation.section.group.end.less
//                  ^ punctuation.terminator.rule.css
//                    ^ punctuation.section.block.end.css

.c { #outer > .inner(); } // deprecated
// ^^ meta.property-list.css meta.block.css - meta.selector
//   ^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.selector.css - meta.group
//                  ^^ meta.property-list.css meta.block.css meta.selector.parameters.css meta.group.less
//                    ^^^ meta.property-list.css meta.block.css - meta.selector
// ^ punctuation.section.block.begin.css
//   ^^^^^^ entity.other.attribute-name.id.css
//          ^ keyword.operator.combinator.css
//            ^ punctuation.definition.entity.css
//            ^^^^^^ entity.other.attribute-name.class.css
//                  ^ punctuation.section.group.begin.less
//                   ^ punctuation.section.group.end.less
//                    ^ punctuation.terminator.rule.css
//                      ^ punctuation.section.block.end.css

//=============================================================================
// Guarded Namespaces
// https://lesscss.org/features/#mixins-feature-guarded-namespaces
//=============================================================================

#namespace when (@mode = huge) { .mixin() {} }
// <- meta.selector.css entity.other.attribute-name.id.css punctuation.definition.entity.css
//^^^^^^^^^ meta.selector.css
//         ^^^^^ meta.selector.css meta.guard.less - meta.group
//              ^^^^^^^^^^^^^^ meta.selector.css meta.guard.less meta.group.less
//                            ^ meta.selector.css meta.guard.less - meta.group
//         ^^^^ keyword.control.conditional.less
//              ^ punctuation.section.group.begin.less
//               ^^^^^ variable.other.less
//                     ^ keyword.operator.comparison.less
//                       ^^^^ support.constant.property-value.css
//                           ^ punctuation.section.group.end.less

#namespace { .mixin() when (@mode = huge) {} }
//         ^^ meta.property-list.css meta.block.css - meta.selector
//           ^^^^^^ meta.property-list.css meta.block.css meta.selector.css - meta.guard
//                 ^^ meta.property-list.css meta.block.css meta.selector.parameters.css - meta.guard
//                   ^ meta.property-list.css meta.block.css meta.selector.css - meta.guard
//                    ^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.selector.css meta.guard.less

#sp_1 when (default()) {
  #sp_2 when (default()) {
    .mixin() when not(default()) {}
// ^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css - meta.selector
//  ^^^^^^^^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.selector - meta.guard
//           ^^^^^^^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.selector.css meta.guard.less - meta.group
//                   ^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.selector.css meta.guard.less meta.group.less
//                              ^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.selector.css meta.guard.less - meta.group
//           ^^^^ keyword.control.conditional.less
//                ^^^ keyword.operator.logical.less
//                   ^ punctuation.section.group.begin.less
//                    ^^^^^^^ meta.function-call.identifier.less support.function.less
//                           ^^ meta.function-call.arguments.less meta.group.less
//                             ^ punctuation.section.group.end.less
  }
}

//=============================================================================
// The !important keyword
// https://lesscss.org/features/#mixins-feature-the-important-keyword
//=============================================================================

.important {
  .foo() !important;
//^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//^^^^ meta.selector.css entity.other.attribute-name.class.css
//    ^^ meta.selector.parameters.css meta.group.less
//      ^ meta.selector.css - keyword
//       ^^^^^^^^^^ meta.selector.css keyword.other.important.css
}

//=============================================================================
// Parametric Mixins
// https://lesscss.org/features/#mixins-feature-mixins-parametric-feature
//=============================================================================

#header {
  .border-radius(4px);
//^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.less entity.other.attribute-name.class.css
//              ^^^^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less
}

.border-radius(@radius) {
// <- meta.selector.css entity.other.attribute-name.class.css punctuation.definition.entity.css
//^^^^^^^^^^^^ meta.selector.css - meta.group
//            ^^^^^^^^^ meta.selector.parameters.css meta.group.less
//                     ^ meta.selector.css - meta.group
//            ^ punctuation.section.group.begin.less
//             ^^^^^^^ variable.parameter.less
//                    ^ punctuation.section.group.end.less
  border-radius: @radius;
//               ^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css variable.other.less
}

.border-radius(@radius: 5px) {
// <- meta.selector.css entity.other.attribute-name.class.css punctuation.definition.entity.css
//^^^^^^^^^^^^ meta.selector.css - meta.group
//            ^^^^^^^^^^^^^^ meta.selector.parameters.css meta.group.less
//                          ^ meta.selector.css - meta.group
//            ^ punctuation.section.group.begin.less
//             ^^^^^^^ variable.parameter.less
//                    ^ punctuation.separator.key-value.less
//                      ^^^ meta.number.integer.decimal.css
//                         ^ punctuation.section.group.end.less
  border-radius: @radius;
//               ^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css variable.other.less
}

.border(@width; @style; @color) {
//^^^^^ meta.selector.css - meta.group
//     ^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.parameters.css meta.group.less
//     ^ punctuation.section.group.begin.less
//      ^^^^^^ variable.parameter.less
//            ^ punctuation.separator.sequence.less
//              ^^^^^^ variable.parameter.less
//                    ^ punctuation.separator.sequence.less
//                      ^^^^^^ variable.parameter.less
//                            ^ punctuation.section.group.end.less
    border: @width @style @color;
//         ^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css
//          ^^^^^^ variable.other.less
//                 ^^^^^^ variable.other.less
//                        ^^^^^^ variable.other.less
//                              ^ punctuation.terminator.rule.css
}
.myheader {

    // positional arguments

    .border(5px; /**/ dashed; red);
//  ^^^^^^^ meta.mixin.less entity.other.attribute-name.class.css
//         ^^^^^^^^^^^^^^^^^^^^^^^ meta.mixin.arguments.less meta.group.less
//         ^ punctuation.section.group.begin.less
//             ^ punctuation.separator.sequence.less
//                          ^ punctuation.separator.sequence.less
//                               ^ punctuation.section.group.end.less

    // named arguments

    .border(@width: 5px; /**/ @style: dashed; @color: @red);
//  ^^^^^^^ meta.mixin.less entity.other.attribute-name.class.css
//         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mixin.arguments.less meta.group.less
//         ^ punctuation.section.group.begin.less
//          ^^^^^^ variable.parameter.less
//                ^ punctuation.separator.key-value.less
//                     ^ punctuation.separator.sequence.less
//                            ^^^^^^ variable.parameter.less
//                                  ^ punctuation.separator.key-value.less
//                                          ^ punctuation.separator.sequence.less
//                                            ^^^^^^ variable.parameter.less
//                                                  ^ punctuation.separator.key-value.less
//                                                    ^^^^ variable.other.less
//                                                        ^ punctuation.section.group.end.less

    box-shadow: @arguments;
//              ^^^^^^^^^^ variable.language.mixin.less

    box-shadow: @rest;
//              ^^^^^ variable.language.mixin.less

}

// Advanced Arguments and the @rest Variable

.mixin(...) {}        // matches 0-N arguments
//     ^^^ keyword.operator.variadic.less

.mixin(@a: 1, ...) {} // matches 0-N arguments
//            ^^^ keyword.operator.variadic.less

.mixin(@a, ...) {}    // matches 1-N arguments
//         ^^^ keyword.operator.variadic.less

.mixin(@a, @rest...) {}
//         ^^^^^ variable.language.mixin.less
//              ^^^ keyword.operator.variadic.less

//=============================================================================
// Mixins As Functions
// https://lesscss.org/features/#mixins-feature-mixins-as-functions-feature
//=============================================================================

.average(@x, @y) { @result: ((@x + @y) / 2); }

div {
  // call a mixin and look up its "@result" value
  padding: .average(16px, 50px)[@result];
//        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-value.css
//         ^^^^^^^^ meta.mixin.less entity.other.attribute-name.class.css
//                 ^^^^^^^^^^^^ meta.mixin.arguments.less meta.group.less
//                             ^^^^^^^^^ meta.mixin.item-access.less meta.brackets.less
//                 ^ punctuation.section.group.begin.less
//                  ^^^^ meta.number.integer.decimal.css
//                      ^ punctuation.separator.sequence.less
//                        ^^^^ meta.number.integer.decimal.css
//                            ^ punctuation.section.group.end.less
//                             ^ punctuation.section.brackets.begin.less
//                              ^^^^^^^ variable.other.less
//                                     ^ punctuation.section.brackets.end.less

  padding: .average(@x: 16px; @y: 50px)[@result];
//        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-value.css
//         ^^^^^^^^ meta.mixin.less entity.other.attribute-name.class.css
//                 ^^^^^^^^^^^^^^^^^^^^ meta.mixin.arguments.less meta.group.less
//                                     ^^^^^^^^^ meta.mixin.item-access.less meta.brackets.less
//                 ^ punctuation.section.group.begin.less
//                  ^^ variable.parameter.less
//                    ^ punctuation.separator.key-value.less
//                      ^^^^ meta.number.integer.decimal.css
//                          ^ punctuation.separator.sequence.less
//                            ^^ variable.parameter.less
//                              ^ punctuation.separator.key-value.less
//                                ^^^^ meta.number.integer.decimal.css
//                                    ^ punctuation.section.group.end.less
//                                     ^ punctuation.section.brackets.begin.less
//                                      ^^^^^^^ variable.other.less
//                                             ^ punctuation.section.brackets.end.less
}

//=============================================================================
// Mixin Guards
// https://lesscss.org/features/#mixins-feature-mixin-guards-feature
//=============================================================================

.mixin(@a) when (lightness(@a) >= 50%) {}
// ^^^ meta.selector.css - meta.guard
//    ^^^^ meta.selector.parameters.css meta.group.less - meta.guard
//        ^ meta.selector.css - meta.guard
//         ^^^^^ meta.selector.css meta.guard.less - meta.group
//              ^ meta.selector.css meta.guard.less meta.group.less - meta.function-call
//               ^^^^^^^^^ meta.selector.css meta.guard.less meta.group.less meta.function-call.identifier.less
//                        ^^^^ meta.selector.css meta.guard.less meta.group.less meta.function-call.arguments.less meta.group.less
//                            ^^^^^^^^ meta.selector.css meta.guard.less meta.group.less - meta.function-call
//                                    ^ meta.selector.css meta.guard.less - meta.group
//^^^^ entity.other.attribute-name.class.css
//    ^ punctuation.section.group.begin.less
//     ^^ variable.parameter.less
//       ^ punctuation.section.group.end.less
//         ^^^^ keyword.control.conditional.less
//              ^ punctuation.section.group.begin.less
//               ^^^^^^^^^ support.function.less
//                        ^ punctuation.section.group.begin.less
//                         ^^ variable.other.less
//                           ^ punctuation.section.group.end.less
//                             ^^ keyword.operator.comparison.less
//                                ^^^ constant.numeric
//                                   ^ punctuation.section.group.end.less
//                                     ^ punctuation.section.block.begin.css
//                                      ^ punctuation.section.block.end.css

.mixin(@a; @b: 0) when (isnumber(@b)) {}
// ^^^ meta.selector.css - meta.guard
//    ^^^^^^^^^^^ meta.selector.parameters.css meta.group.less - meta.guard
//                ^^^^^ meta.selector.css meta.guard.less - meta.group
//                     ^ meta.selector.css meta.guard.less meta.group.less - meta.function-call
//                      ^^^^^^^^ meta.selector.css meta.guard.less meta.group.less meta.function-call.identifier.less
//                              ^^^^ meta.selector.css meta.guard.less meta.group.less meta.function-call.arguments.less meta.group.less
//                                  ^ meta.selector.css meta.guard.less meta.group.less - meta.function-call
//                                   ^ meta.selector.css meta.guard.less - meta.group
//^^^^ entity.other.attribute-name.class.css
//    ^ punctuation.section.group.begin.less
//     ^^ variable.parameter.less
//       ^ punctuation.separator.sequence.less
//         ^^ variable.parameter.less
//           ^ punctuation.separator.key-value.less
//             ^ meta.number.integer.decimal.css constant.numeric.value.css
//              ^ punctuation.section.group.end.less
//               ^ meta.selector.css - meta.guard
//                ^^^^ keyword.control.conditional.less
//                     ^ punctuation.section.group.begin.less
//                      ^^^^^^^^ support.function.less
//                              ^ punctuation.section.group.begin.less
//                               ^^ variable.other.less
//                                 ^^ punctuation.section.group.end.less
//                                    ^ punctuation.section.block.begin.css
//                                     ^ punctuation.section.block.end.css

.mixin(@a; @b: black) when (iscolor(@b)) {}
// ^^^ meta.selector.css - meta.guard
//    ^^^^^^^^^^^^^^^ meta.selector.parameters.css meta.group.less - meta.guard
//                   ^ meta.selector.css - meta.guard
//                    ^^^^^^^^^^^^^^^^^^^ meta.selector.css meta.guard.less
//                          ^^^^^^^ meta.function-call.identifier.less support.function.less
//                                 ^^^^ meta.function-call.arguments.less meta.group.less

.mixin(@a; @b: black) when (iscolor(@b)) or (@a = true) {}
// ^^^ meta.selector.css - meta.guard
//    ^^^^^^^^^^^^^^^ meta.selector.parameters.css meta.group.less - meta.guard
//                   ^ meta.selector.css - meta.guard
//                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css meta.guard.less
//                         ^^^^^^^^^^^^^ meta.group.less
//                          ^^^^^^^ meta.function-call.identifier.less support.function.less
//                                 ^^^^ meta.function-call.arguments.less meta.group.less
//                                       ^^ keyword.operator.logical.less
//                                          ^^^^^^^^^^^ meta.group.less
//                                                      ^^ meta.property-list.css meta.block.css - meta.selector

.mixin(@a; @b: black)
// <- meta.selector.css entity.other.attribute-name.class.css punctuation.definition.entity.css
// ^^^ meta.selector.css - meta.guard
//    ^^^^^^^^^^^^^^^ meta.selector.parameters.css meta.group.less - meta.guard
//                   ^ meta.selector.css - meta.guard

    when (
// ^ meta.selector.css - meta.guard
//  ^^^^^ meta.selector.css meta.guard.less - meta.group
//       ^^ meta.selector.css meta.guard.less meta.group.less
//  ^^^^ keyword.control.conditional.less
//       ^ punctuation.section.group.begin.less

        iscolor(@b)
//      ^^^^^^^ meta.selector.css meta.guard.less meta.group.less meta.function-call.identifier.less support.function.less
//             ^^^^ meta.selector.css meta.guard.less meta.group.less meta.function-call.arguments.less meta.group.less
    )
//  ^ meta.selector.css meta.guard.less meta.group.less punctuation.section.group.end.less

    or not (
//  ^^^^^^^ meta.selector.css meta.guard.less - meta.group
//         ^^ meta.selector.css meta.guard.less meta.group.less
//  ^^ keyword.operator.logical.less
//     ^^^ keyword.operator.logical.less
//         ^ punctuation.section.group.begin.less

        @a = true
//     ^^^^^^^^^^^ meta.selector.css meta.guard.less meta.group.less
//      ^^ variable.other.less
//         ^ keyword.operator.comparison.less
//           ^^^^ support.constant.property-value.css

    ) {}
//  ^ meta.selector.css meta.guard.less meta.group.less punctuation.section.group.end.less
//   ^ meta.selector.css meta.guard.less - meta.property-list - meta.block - meta.group
//    ^^ meta.property-list.css meta.block.css

//=============================================================================
// Aliasing Mixins
// https://lesscss.org/features/#mixins-feature-mixin-aliasing-feature
//=============================================================================

#theme.dark.navbar {
    .colors(light) {
        primary: purple;
    }
    .colors(dark) {
        primary: black;

        secondary: #cc;
//                 ^^^ entity.other.attribute-name.id.css

        secondary: #ccc;
//                 ^^^^ constant.other.color.rgb-value.css

        secondary: #cccc;
//                 ^^^^^ constant.other.color.rgba-value.css

        secondary: #ccccac;
//                 ^^^^^^^ constant.other.color.rgb-value.css

        secondary: #cccccccc;
//                 ^^^^^^^^^ constant.other.color.rgba-value.css

        secondary: #-ccccccc;
//                 ^^^^^^^^^ entity.other.attribute-name.id.css

        secondary: #cccccccg;
//                 ^^^^^^^^^ entity.other.attribute-name.id.css

        secondary: #ccccccccg;
//                 ^^^^^^^^^^ entity.other.attribute-name.id.css
    }
    .box {
        @alias: #library.rules();
//      ^^^^^^ meta.declaration.identifier.less variable.other.less
//            ^ meta.declaration.less punctuation.separator.key-value.css
//             ^ meta.declaration.value.less - meta.selector
//              ^^^^^^^^^^^^^^ meta.declaration.value.less meta.mixin.less
//                            ^^ meta.mixin.arguments.less meta.group.less
//                              ^ - meta.declaration
//      ^ punctuation.definition.variable.less
//      ^^^^^^ variable.other.less
//            ^ punctuation.separator.key-value.css
//              ^^^^^^^^ entity.other.attribute-name.id.css
//                      ^^^^^^ entity.other.attribute-name.class.css
//                            ^ punctuation.section.group.begin.less
//                             ^ punctuation.section.group.end.less

        @alias: .library.rules();
//      ^^^^^^ meta.declaration.identifier.less variable.other.less
//            ^ meta.declaration.less punctuation.separator.key-value.css
//             ^ meta.declaration.value.less - meta.selector
//              ^^^^^^^^^^^^^^ meta.declaration.value.less meta.mixin.less
//                            ^^ meta.mixin.arguments.less meta.group.less
//                              ^ - meta.declaration
//      ^ punctuation.definition.variable.less
//      ^^^^^^ variable.other.less
//            ^ punctuation.separator.key-value.css
//              ^^^^^^^^ entity.other.attribute-name.class.css
//                      ^^^^^^ entity.other.attribute-name.class.css
//                            ^ punctuation.section.group.begin.less
//                             ^ punctuation.section.group.end.less

        @alias: .library#rules();
//      ^^^^^^ meta.declaration.identifier.less variable.other.less
//            ^ meta.declaration.less punctuation.separator.key-value.css
//             ^ meta.declaration.value.less - meta.selector
//              ^^^^^^^^^^^^^^ meta.declaration.value.less meta.mixin.less
//                            ^^ meta.mixin.arguments.less meta.group.less
//                              ^ - meta.declaration
//      ^ punctuation.definition.variable.less
//      ^^^^^^ variable.other.less
//            ^ punctuation.separator.key-value.css
//              ^^^^^^^^ entity.other.attribute-name.class.css
//                      ^^^^^^ entity.other.attribute-name.id.css
//                            ^ punctuation.section.group.begin.less
//                             ^ punctuation.section.group.end.less

        @alias();
//      ^^^^^^ meta.function-call.identifier.less variable.other.less
//            ^^ meta.function-call.arguments.less meta.group.less
    }
}

.navbar {
    @colors: #theme.dark.navbar.colors(dark);
//  ^^^^^^^ meta.declaration.identifier.less variable.other.less
//         ^ meta.declaration.less punctuation.separator.key-value.css
//          ^ meta.declaration.value.less - meta.selector
//           ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.declaration.value.less meta.mixin.less
//                                    ^^^^^^ meta.mixin.arguments.less meta.group.less
//                                          ^ - meta.declaration

    @colors: .theme.dark.navbar#colors(dark);
//  ^^^^^^^ meta.declaration.identifier.less variable.other.less
//         ^ meta.declaration.less punctuation.separator.key-value.css
//          ^ meta.declaration.value.less - meta.selector
//           ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.declaration.value.less meta.mixin.less
//                                    ^^^^^^ meta.mixin.arguments.less meta.group.less
//                                          ^ - meta.declaration

    @colors: #theme.dark.navbar#colors(dark);
//  ^^^^^^^ meta.declaration.identifier.less variable.other.less
//         ^ meta.declaration.less punctuation.separator.key-value.css
//          ^ meta.declaration.value.less - meta.selector
//           ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.declaration.value.less meta.mixin.less
//                                    ^^^^^^ meta.mixin.arguments.less meta.group.less
//                                          ^ - meta.declaration

    background: @colors[primary];
//             ^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css
//              ^^^^^^^ variable.other.less
//                     ^^^^^^^^^ meta.attribute-selector.css meta.brackets.css
//                     ^ punctuation.section.brackets.begin.css
//                             ^ punctuation.section.brackets.end.css
//                              ^ punctuation.terminator.rule.css

    border: 1px solid @colors[secondary];
//         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-value.css
//                    ^^^^^^^ variable.other.less
//                           ^^^^^^^^^^^ meta.attribute-selector.css meta.brackets.css
//                           ^ punctuation.section.brackets.begin.css
//                                     ^ punctuation.section.brackets.end.css
//                                      ^ punctuation.terminator.rule.css
}

//=============================================================================
// Detached Rulesets
// https://lesscss.org/features/#detached-rulesets-feature
//=============================================================================

header {
    background-color: blue;

    #hover({
//         ^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css
//         ^ punctuation.section.block.begin.css
        .site-header-info-extra-tooltip {
            opacity: 1;
//         ^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//          ^^^^^^^ meta.property-name.css support.type.property-name.css
//                 ^ punctuation.separator.key-value.css
//                  ^^ meta.property-value.css
//                    ^ punctuation.terminator.rule.css

            #transition(~'opacity @{duration-short} @{ease}')
//         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//          ^^^^^^^^^^^ meta.mixin.less entity.other.attribute-name.id.css
//                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mixin.arguments.less meta.group.less meta.mixin.arguments.less meta.group.less
//                     ^ punctuation.section.group.begin.less
//                      ^ keyword.operator.escape.less
//                       ^^^^^^^^^ meta.string.css string.quoted.single.css - meta.interpolation
//                       ^ punctuation.definition.string.begin.css
//                                ^^^^^^^^^^^^^^^^^ meta.string.css meta.interpolation.less - string
//                                                 ^ meta.string.css string.quoted.single.css - meta.interpolation
//                                                  ^^^^^^^ meta.string.css meta.interpolation.less - string
//                                                         ^ meta.string.css string.quoted.single.css punctuation.definition.string.end.css
        }
//     ^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//      ^ punctuation.section.block.end.css
//       ^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css

        .site-header-info-extra-tooltip {
//      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css entity.other.attribute-name.class.css
            opacity: 1;
//         ^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css
            #transition(~'opacity @{duration-short} @{ease}')
//         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//          ^^^^^^^^^^^ meta.selector.css entity.other.attribute-name.id.css
//                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.parameters.css meta.group.less

            .site-header-info-extra-tooltip {
//          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css entity.other.attribute-name.class.css
                opacity: 1;
//             ^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.property-list.css meta.block.css
                #transition(~'opacity @{duration-short} @{ease}')
//             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//              ^^^^^^^^^^^ meta.mixin.less entity.other.attribute-name.id.css
//                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.mixin.arguments.less meta.group.less meta.mixin.arguments.less meta.group.less
            }
        }
    });

    .desktop-and-old-ie({
//  ^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.less entity.other.attribute-name.class.css
//                     ^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less punctuation.section.group.begin.less
//                      ^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css punctuation.section.block.begin.css
        background-color: red(color);
//     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css
//      ^^^^^^^^^^^^^^^^ meta.property-name.css support.type.property-name.css
//                      ^ punctuation.separator.key-value.css
//                       ^  meta.property-value.css - meta.function-call
//                        ^^^ meta.function-call.identifier.less support.function.less
//                           ^^^^^^^ meta.function-call.arguments.less meta.group.less

        width: @variable + @another-variable;
//     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css
//            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-value.css
//             ^^^^^^^^^ variable.other.less
//                       ^ keyword.operator.arithmetic.less
//                         ^^^^^^^^^^^^^^^^^ variable.other.less
//                                          ^ punctuation.terminator.rule.css
    });
//  ^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less meta.property-list.css meta.block.css punctuation.section.block.end.css
//   ^ meta.property-list.css meta.block.css meta.mixin.arguments.less meta.group.less punctuation.section.group.end.less
//    ^ meta.property-list.css meta.block.css punctuation.terminator.rule.css
}
// <- meta.property-list.css meta.block.css punctuation.section.block.end.css

@detached-ruleset: {
// <- meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
//^^^^^^^^^^^^^^^ meta.declaration.identifier.less variable.other.less
//               ^ meta.declaration.less punctuation.separator.key-value.css
//                ^ meta.declaration.value.less - meta.property-list - meta.block
//                 ^^ meta.declaration.value.less meta.property-list.css meta.block.css
//                 ^ punctuation.section.block.begin.css
    .mixin() {
//  ^^^^^^^^^ meta.declaration.value.less meta.property-list.css meta.block.css meta.selector
//           ^^ meta.declaration.value.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css

        font-family: "Algerian";
//     ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.declaration.value.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//      ^^^^^^^^^^^ meta.property-name.css support.type.property-name.css
//                 ^ punctuation.separator.key-value.css
//                   ^^^^^^^^^^ meta.property-value.css meta.string.css string.quoted.double.css
//                             ^ punctuation.terminator.rule.css
    }
// ^^ meta.declaration.value.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css
};
// <- meta.declaration.value.less meta.property-list.css meta.block.css punctuation.section.block.end.css
 // <- punctuation.terminator.rule.css - meta.declaration - meta.property-list - meta.block

.cont {
    @detached-ruleset();
//  ^^^^^^^^^^^^^^^^^ meta.function-call.identifier.less variable.other.less
//                   ^^ meta.function-call.arguments.less meta.group.less
    .mixin();
//  ^^^^^^ meta.mixin.less entity.other.attribute-name.class.css
//        ^^ meta.mixin.arguments.less meta.group.less
}

//=============================================================================
// Escaping
// https://lesscss.org/#escaping
//=============================================================================

.test-escaping {

  test: ~"calc(@{space} + 4px)";
//      ^ keyword.operator.escape.less
//       ^^^^^^ meta.string.css string.quoted.double.css
//             ^^^^^^^^ meta.string.css meta.interpolation.less - string
//                     ^^^^^^^^ meta.string.css string.quoted.double.css

}

//=============================================================================
// Functions
// https://lesscss.org/#functions
// https://lesscss.org/functions/#functions-overview
//=============================================================================

@dr: if(@my-option = true, { button { color: white; } });
// <- meta.declaration.identifier.less variable.other.less punctuation.definition.variable.less
//^ meta.declaration.identifier.less variable.other.less
// ^ meta.declaration.less punctuation.separator.key-value.css
//  ^ meta.declaration.value.less - meta.function-call
//   ^^ meta.declaration.value.less meta.function-call.identifier.less
//     ^^^^^^^^^^^^^^^^^^^^ meta.declaration.value.less meta.function-call.arguments.less meta.group.less - meta.property-list
//                         ^^^^^^^^^ meta.declaration.value.less meta.function-call.arguments.less meta.group.less meta.property-list.css meta.block.css
//                                  ^^^^^^^^^^^^^^^^^ meta.declaration.value.less meta.function-call.arguments.less meta.group.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//                                                   ^^ meta.declaration.value.less meta.function-call.arguments.less meta.group.less meta.property-list.css meta.block.css
//                                                     ^ meta.declaration.value.less meta.function-call.arguments.less meta.group.less
//   ^^ support.function.less
//     ^ punctuation.section.group.begin.less
//      ^^^^^^^^^^ variable.other.less
//                 ^ keyword.operator.comparison.less
//                   ^^^^ support.constant.property-value.css
//                       ^ punctuation.separator.sequence.css
//                         ^ punctuation.section.block.begin.css
//                           ^^^^^^ meta.selector.css entity.name.tag.html.css
//                                  ^ punctuation.section.block.begin.css
//                                    ^^^^^ meta.property-name.css support.type.property-name.css
//                                         ^ punctuation.separator.key-value.css
//                                           ^^^^^ meta.property-value.css support.constant.color.w3c.standard.css
//                                                ^ punctuation.terminator.rule.css
//                                                  ^ punctuation.section.block.end.css
//                                                    ^ punctuation.section.block.end.css
//                                                     ^ punctuation.section.group.end.less
//                                                      ^ punctuation.terminator.rule.css
//

.test-logical-functions {

    if(@var = 'foo', { foo: @var }, {foo:red});
//  ^^ meta.function-call.identifier.less support.function.less
//    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//    ^ punctuation.section.group.begin.less
//     ^^^^ variable.other.less
//          ^ keyword.operator.comparison.less
//            ^^^^^ meta.string.css string.quoted.single.css
//                 ^ punctuation.separator.sequence.css
//                   ^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//                                ^ punctuation.separator.sequence.css
//                                  ^^^^^^^^^ meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//                                           ^ punctuation.section.group.end.less
//                                            ^ punctuation.terminator.rule.css

    prop: if(not (true), foo, bar);
//        ^^ meta.function-call.identifier.less support.function.less
//          ^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//          ^ punctuation.section.group.begin.less
//           ^^^ keyword.operator.logical.less
//               ^^^^^^ meta.group.less
//               ^ punctuation.section.group.begin.less
//                ^^^^ support.constant.property-value.css
//                    ^ punctuation.section.group.end.less
//                     ^ punctuation.separator.sequence.css
//                       ^^^ support.constant.property-value.css
//                          ^ punctuation.separator.sequence.css
//                            ^^^ support.constant.property-value.css
//                               ^ punctuation.section.group.end.less
//                                ^ punctuation.terminator.rule.css

    prop: if((true) and (2 > 1), foo, bar);
//        ^^ meta.function-call.identifier.less support.function.less
//          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//          ^^ punctuation.section.group.begin.less
//           ^^^^^^ meta.group.less
//           ^ punctuation.section.group.begin.less
//            ^^^^ support.constant.property-value.css
//                ^ punctuation.section.group.end.less
//                  ^^^ keyword.operator.logical.less
//                      ^^^^^^^ meta.group.less
//                      ^ punctuation.section.group.begin.less
//                       ^ meta.number.integer.decimal.css constant.numeric.value.css
//                         ^ keyword.operator.comparison.less
//                           ^ meta.number.integer.decimal.css constant.numeric.value.css
//                            ^ punctuation.section.group.end.less
//                             ^ punctuation.separator.sequence.css
//                               ^^^ support.constant.property-value.css
//                                  ^ punctuation.separator.sequence.css
//                                    ^^^ support.constant.property-value.css
//                                       ^ punctuation.section.group.end.less
//                                        ^ punctuation.terminator.rule.css

    prop: if((false) or (isstring("boo!")), foo, bar);
//        ^^ meta.function-call.identifier.less support.function.less
//          ^ meta.function-call.arguments.less meta.group.less - meta.group meta.group
//           ^^^^^^^ meta.function-call.arguments.less meta.group.less meta.group.less
//                  ^^^^ meta.function-call.arguments.less meta.group.less - meta.group meta.group
//                       ^^^^^^^^ meta.function-call.arguments.less meta.group.less meta.group.less meta.function-call.identifier.less
//                               ^^^^^^^^ meta.function-call.arguments.less meta.group.less meta.group.less meta.function-call.arguments.less meta.group.less
//                                       ^ meta.function-call.arguments.less meta.group.less meta.group.less
//                                        ^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less - meta.group meta.group
//          ^^ punctuation.section.group.begin.less
//            ^^^^^ support.constant.property-value.css
//                 ^ punctuation.section.group.end.less
//                   ^^ keyword.operator.logical.less
//                      ^ punctuation.section.group.begin.less
//                       ^^^^^^^^ support.function.less
//                               ^ punctuation.section.group.begin.less
//                                ^^^^^^ meta.string.css string.quoted.double.css
//                                      ^^ punctuation.section.group.end.less
//                                        ^ punctuation.separator.sequence.css
//                                          ^^^ support.constant.property-value.css
//                                             ^ punctuation.separator.sequence.css
//                                               ^^^ support.constant.property-value.css
//                                                  ^ punctuation.section.group.end.less
//                                                   ^ punctuation.terminator.rule.css

    test: boolean(@foo > 10 ;
//        ^^^^^^^ meta.function-call.identifier.less support.function.less
//               ^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                          ^ - meta.function-call
//               ^ punctuation.section.group.begin.less
//                ^^^^ variable.other.less
//                     ^ keyword.operator.comparison.less
//                       ^^ meta.number.integer.decimal.css constant.numeric.value.css
//                          ^ punctuation.terminator.rule.css

    test: boolean(@foo > 10);
//        ^^^^^^^ meta.function-call.identifier.less support.function.less
//               ^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                          ^ - meta.function-call
//               ^ punctuation.section.group.begin.less
//                ^^^^ variable.other.less
//                     ^ keyword.operator.comparison.less
//                       ^^ meta.number.integer.decimal.css constant.numeric.value.css
//                         ^ punctuation.section.group.end.less
//                          ^ punctuation.terminator.rule.css
}

.test-escape-functions {

    test: escape('a=1');
//        ^^^^^^ meta.function-call.identifier.less support.function.less
//              ^^^^^^^ meta.function-call.arguments.less meta.group.less
//              ^ punctuation.section.group.begin.less
//               ^^^^^ meta.string.css string.quoted.single.css
//                    ^ punctuation.section.group.end.less
//                     ^ punctuation.terminator.rule.css
}

.test-format-functions {

    format-incomplete: %( ;
//                     ^ meta.function-call.identifier.less support.function.less
//                      ^^ meta.function-call.arguments.less meta.group.less
//                        ^ - meta.function-call
//                      ^ punctuation.section.group.begin.less
//                        ^ punctuation.terminator.rule.css

    format-incomplete: %( , ;
//                     ^ meta.function-call.identifier.less support.function.less
//                      ^^^^ meta.function-call.arguments.less meta.group.less
//                          ^ - meta.function-call
//                      ^ punctuation.section.group.begin.less
//                        ^ punctuation.separator.sequence.css
//                          ^ punctuation.terminator.rule.css

    format-a-d: %("repetitions: %a file: %d", 1 + 2, "directory/file.less");
//              ^ meta.function-call.identifier.less support.function.less
//               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//               ^ punctuation.section.group.begin.less
//                ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string.format.css string.quoted.double.css
//                ^ punctuation.definition.string.begin.css
//                              ^^ constant.other.placeholder.less
//                                       ^^ constant.other.placeholder.less
//                                         ^ punctuation.definition.string.end.css
//                                          ^ punctuation.separator.sequence.css
//                                            ^ meta.number.integer.decimal.css constant.numeric.value.css
//                                              ^ keyword.operator.arithmetic.less
//                                                ^ meta.number.integer.decimal.css constant.numeric.value.css
//                                                 ^ punctuation.separator.sequence.css
//                                                   ^^^^^^^^^^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//                                                                        ^ punctuation.section.group.end.less
//                                                                         ^ punctuation.terminator.rule.css

    format-a-d-upper: %('repetitions: %A file: %D', 1 + 2, "directory/file.less");
//                    ^ meta.function-call.identifier.less support.function.less
//                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                     ^ punctuation.section.group.begin.less
//                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string.format.css string.quoted.single.css
//                      ^ punctuation.definition.string.begin.css
//                                    ^^ constant.other.placeholder.less
//                                             ^^ constant.other.placeholder.less
//                                               ^ punctuation.definition.string.end.css
//                                                ^ punctuation.separator.sequence.css
//                                                  ^ meta.number.integer.decimal.css constant.numeric.value.css
//                                                    ^ keyword.operator.arithmetic.less
//                                                      ^ meta.number.integer.decimal.css constant.numeric.value.css
//                                                       ^ punctuation.separator.sequence.css
//                                                         ^^^^^^^^^^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//                                                                              ^ punctuation.section.group.end.less
//                                                                               ^ punctuation.terminator.rule.css

    format-s: %("repetitions: %s file: %s", 1 + 2, "directory/file.less");
//            ^ meta.function-call.identifier.less support.function.less
//             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//             ^ punctuation.section.group.begin.less
//              ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string.format.css string.quoted.double.css
//              ^ punctuation.definition.string.begin.css
//                            ^^ constant.other.placeholder.less
//                                     ^^ constant.other.placeholder.less
//                                       ^ punctuation.definition.string.end.css
//                                        ^ punctuation.separator.sequence.css
//                                          ^ meta.number.integer.decimal.css constant.numeric.value.css
//                                            ^ keyword.operator.arithmetic.less
//                                              ^ meta.number.integer.decimal.css constant.numeric.value.css
//                                               ^ punctuation.separator.sequence.css
//                                                 ^^^^^^^^^^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//                                                                      ^ punctuation.section.group.end.less
//                                                                       ^ punctuation.terminator.rule.css

    format-s-upper: %('repetitions: %S file: %S', 1 + 2, "directory/file.less");
//                  ^ meta.function-call.identifier.less support.function.less
//                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                   ^ punctuation.section.group.begin.less
//                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string.format.css string.quoted.single.css
//                    ^ punctuation.definition.string.begin.css
//                                  ^^ constant.other.placeholder.less
//                                           ^^ constant.other.placeholder.less
//                                             ^ punctuation.definition.string.end.css
//                                              ^ punctuation.separator.sequence.css
//                                                ^ meta.number.integer.decimal.css constant.numeric.value.css
//                                                  ^ keyword.operator.arithmetic.less
//                                                    ^ meta.number.integer.decimal.css constant.numeric.value.css
//                                                     ^ punctuation.separator.sequence.css
//                                                       ^^^^^^^^^^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//                                                                            ^ punctuation.section.group.end.less
//                                                                             ^ punctuation.terminator.rule.css
}

.test-replace-functions {

    test: replace("Hello, Mars?", "Mars\?", "Earth!");
//        ^^^^^^^ meta.function-call.identifier.less support.function.less
//               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                                                   ^ - meta.function-call
//               ^ punctuation.section.group.begin.less
//                ^^^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//                ^ punctuation.definition.string.begin.css
//                             ^ punctuation.definition.string.end.css
//                              ^ punctuation.separator.sequence.css
//                                ^^^^^^^^ meta.string.regexp.css
//                                ^ string.quoted.double.css punctuation.definition.string.begin.css
//                                 ^^^^^^ source.regexp.css
//                                     ^^ constant.character.escape.regexp
//                                       ^ string.quoted.double.css punctuation.definition.string.end.css
//                                        ^ punctuation.separator.sequence.css
//                                          ^^^^^^^^ meta.string.regexp.replacement.css string.quoted.double.css
//                                          ^ punctuation.definition.string.begin.css
//                                                 ^ punctuation.definition.string.end.css
//                                                  ^ punctuation.section.group.end.less
//                                                   ^ punctuation.terminator.rule.css

    test: replace("One + one = 4", "one", "2", "gi");
//        ^^^^^^^ meta.function-call.identifier.less support.function.less
//               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                                                  ^ - meta.function-call
//               ^ punctuation.section.group.begin.less
//                ^^^^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//                ^ punctuation.definition.string.begin.css
//                              ^ punctuation.definition.string.end.css
//                               ^ punctuation.separator.sequence.css
//                                 ^^^^^ meta.string.regexp.css
//                                 ^ string.quoted.double.css punctuation.definition.string.begin.css
//                                  ^^^ source.regexp.css
//                                     ^ string.quoted.double.css punctuation.definition.string.end.css
//                                      ^ punctuation.separator.sequence.css
//                                        ^^^ meta.string.regexp.replacement.css string.quoted.double.css
//                                        ^ punctuation.definition.string.begin.css
//                                          ^ punctuation.definition.string.end.css
//                                           ^ punctuation.separator.sequence.css
//                                             ^^^^ meta.string.css string.quoted.double.css
//                                             ^ punctuation.definition.string.begin.css
//                                                ^ punctuation.definition.string.end.css
//                                                 ^ punctuation.section.group.end.less
//                                                  ^ punctuation.terminator.rule.css

    test: replace('This is a string.', "(string)\.$", "new $1.");
//        ^^^^^^^ meta.function-call.identifier.less support.function.less
//               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                                                              ^ - meta.function-call
//               ^ punctuation.section.group.begin.less
//                ^^^^^^^^^^^^^^^^^^^ meta.string.css string.quoted.single.css
//                ^ punctuation.definition.string.begin.css
//                                  ^ punctuation.definition.string.end.css
//                                   ^ punctuation.separator.sequence.css
//                                     ^^^^^^^^^^^^^ meta.string.regexp.css
//                                     ^ string.quoted.double.css punctuation.definition.string.begin.css
//                                      ^^^^^^^^ source.regexp.css meta.group.regexp
//                                      ^ punctuation.section.group.begin.regexp
//                                             ^ punctuation.section.group.end.regexp
//                                              ^^^ source.regexp.css - meta.group.regexp
//                                              ^^ constant.character.escape.regexp
//                                                ^ keyword.control.anchor.regexp
//                                                 ^ string.quoted.double.css punctuation.definition.string.end.css
//                                                  ^ punctuation.separator.sequence.css
//                                                    ^^^^^^^^^ meta.string.regexp.replacement.css string.quoted.double.css
//                                                    ^ punctuation.definition.string.begin.css
//                                                         ^^ variable.language.match.regexp-replace
//                                                            ^ punctuation.definition.string.end.css
//                                                             ^ punctuation.section.group.end.less
//                                                              ^ punctuation.terminator.rule.css

    test: replace(~"bar-1", '1', '2');
//        ^^^^^^^ meta.function-call.identifier.less support.function.less
//               ^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                                   ^ - meta.function-call
//               ^ punctuation.section.group.begin.less
//                ^ keyword.operator.escape.less
//                 ^^^^^^^ meta.string.css string.quoted.double.css
//                 ^ punctuation.definition.string.begin.css
//                       ^ punctuation.definition.string.end.css
//                        ^ punctuation.separator.sequence.css
//                          ^^^ meta.string.regexp.css
//                          ^ string.quoted.single.css punctuation.definition.string.begin.css
//                           ^ source.regexp.css
//                            ^ string.quoted.single.css punctuation.definition.string.end.css
//                             ^ punctuation.separator.sequence.css
//                               ^^^ meta.string.regexp.replacement.css string.quoted.single.css
//                               ^ punctuation.definition.string.begin.css
//                                 ^ punctuation.definition.string.end.css
//                                  ^ punctuation.section.group.end.less
//                                   ^ punctuation.terminator.rule.css

    text: replace("text", "\"escaped\" [\'\"] \"quotes\"");
//                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string.regexp.css
//                        ^ string.quoted.double.css punctuation.definition.string.begin.css - source.regexp
//                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.regexp.css - string
//                         ^^ constant.character.escape.regexp
//                                  ^^ constant.character.escape.regexp
//                                     ^^^^^^ meta.set.regexp
//                                      ^^^^ constant.character.escape.regexp
//                                            ^^ constant.character.escape.regexp
//                                                    ^^ constant.character.escape.regexp
//                                                      ^ string.quoted.double.css punctuation.definition.string.end.css - source.regexp

    text: replace("text", '\'escaped\' [\'\"] \'quotes\'');
//                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.string.regexp.css
//                        ^ string.quoted.single.css punctuation.definition.string.begin.css - source.regexp
//                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.regexp.css - string
//                         ^^ constant.character.escape.regexp
//                                  ^^ constant.character.escape.regexp
//                                     ^^^^^^ meta.set.regexp
//                                      ^^^^ constant.character.escape.regexp
//                                            ^^ constant.character.escape.regexp
//                                                    ^^ constant.character.escape.regexp
//                                                      ^ string.quoted.single.css punctuation.definition.string.end.css - source.regexp

    text: replace("te@{xt}", "pa@{tt}e[r@{n}]+$", "re$1@{pl}");
//                ^^^ meta.string.css string.quoted.double.css
//                   ^^^^^ meta.string.css meta.interpolation.less - string
//                        ^ meta.string.css string.quoted.double.css
//                           ^^^^^^^^^^^^^^^^^^^ meta.string.regexp.css
//                           ^ string.quoted.double.css punctuation.definition.string.begin.css
//                            ^^^^^^^^^^^^^^^^^ source.regexp.css - string
//                              ^^^^^ meta.interpolation.less
//                                    ^^^^^^^ meta.set.regexp
//                                      ^^^^ meta.interpolation.less
//                                           ^ keyword.operator.quantifier.regexp
//                                            ^ keyword.control.anchor.regexp
//                                             ^ string.quoted.double.css punctuation.definition.string.end.css
//                                                ^^^^^ meta.string.regexp.replacement.css string.quoted.double.css
//                                                     ^^^^^ meta.string.regexp.replacement.css meta.interpolation.less - string
//                                                          ^ meta.string.regexp.replacement.css string.quoted.double.css
//
}

.test-each-functions {

    @selectors: blue, green, red;

    each(@selectors, { .sel-@{value} { a: b; } } );
//  ^^^^ meta.property-list.css meta.block.css meta.function-call.identifier.less
//      ^^^^^^^^^^^^^ meta.property-list.css meta.block.css meta.function-call.arguments.less meta.group.less
//                   ^^ meta.property-list.css meta.block.css meta.function-call.arguments.less meta.group.less - meta.selector
//                     ^^^^^ meta.property-list.css meta.block.css meta.selector.css - meta.interpolation
//                          ^^^^^^^^ meta.property-list.css meta.block.css meta.function-call.arguments.less meta.group.less meta.property-list.css meta.block.css meta.selector.css meta.interpolation.less
//                                  ^ meta.property-list.css meta.block.css meta.selector.css - meta.interpolation
//                                   ^^^^^^^^^ meta.property-list.css meta.block.css meta.function-call.arguments.less meta.group.less meta.property-list.css meta.block.css meta.property-list.css meta.block.css
//                                            ^^ meta.property-list.css meta.block.css meta.function-call.arguments.less meta.group.less meta.property-list.css meta.block.css
//                                              ^^ meta.property-list.css meta.block.css meta.function-call.arguments.less meta.group.less
//                                                ^ meta.property-list.css meta.block.css
//  ^^^^ support.function.less
//      ^ punctuation.section.group.begin.less
//       ^^^^^^^^^^ variable.other.less
//                 ^ punctuation.separator.sequence.css
//                   ^ punctuation.section.block.begin.css
//                     ^^^^^^^^^^^^^ entity.other.attribute-name.class.css
//                                   ^ punctuation.section.block.begin.css
//                                     ^ support.type.property-name.css
//                                      ^ punctuation.separator.key-value.css
//                                        ^ support.constant.property-value.css
//                                         ^ punctuation.terminator.rule.css
//                                           ^ punctuation.section.block.end.css
//                                             ^ punctuation.section.block.end.css
//                                               ^ punctuation.section.group.end.less
//                                                ^ punctuation.terminator.rule.css
}

.test-misc-functions {

    text: svg-gradient(to right, @list);
//        ^^^^^^^^^^^^ meta.function-call.identifier.less support.function.less
//                    ^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                                     ^ - meta.function-call
//                    ^ punctuation.section.group.begin.less
//                     ^^^^^^^^ keyword.other.gradient.less
//                             ^ punctuation.separator.sequence.css
//                               ^^^^^ variable.other.less
//                                    ^ punctuation.section.group.end.less
//                                     ^ punctuation.terminator.rule.css

    text: svg-gradient(~'to right', @list);
//        ^^^^^^^^^^^^ meta.function-call.identifier.less support.function.less
//                    ^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less
//                                        ^ - meta.function-call
//                    ^ punctuation.section.group.begin.less
//                     ^ keyword.operator.escape.less
//                      ^^^^^^^^^^ meta.string.css string.quoted.single.css
//                                ^ punctuation.separator.sequence.css
//                                  ^^^^^ variable.other.less
//                                       ^ punctuation.section.group.end.less
//                                        ^ punctuation.terminator.rule.css
}

.test-color-functions {

    test: saturate(hsl(90, 80%, 50%), 20%);
//        ^^^^^^^^ meta.function-call.identifier.less support.function.less
//                ^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//                 ^^^ meta.function-call.arguments.less meta.group.less meta.function-call.identifier.css
//                    ^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less meta.function-call.arguments.css meta.group.css
//                                  ^^^^^^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//                                        ^ - meta.function-call
//

    test: desaturate(hsl(90, 80%, 50%), 20%);
//        ^^^^^^^^^^ meta.function-call.identifier.less support.function.less
//                  ^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//                   ^^^ meta.function-call.arguments.less meta.group.less meta.function-call.identifier.css
//                      ^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less meta.function-call.arguments.css meta.group.css
//                                    ^^^^^^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//                                          ^ - meta.function-call
//

    test: lighten(hsl(90, 80%, 50%), 20%);
//        ^^^^^^^ meta.function-call.identifier.less support.function.less
//               ^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//                ^^^ meta.function-call.arguments.less meta.group.less meta.function-call.identifier.css
//                   ^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less meta.function-call.arguments.css meta.group.css
//                                 ^^^^^^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//                                       ^ - meta.function-call
//

    test: darken(hsl(90, 80%, 50%), 20%);
//        ^^^^^^ meta.function-call.identifier.less support.function.less
//              ^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//               ^^^ meta.function-call.arguments.less meta.group.less meta.function-call.identifier.css
//                  ^^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less meta.function-call.arguments.css meta.group.css
//                                ^^^^^^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//                                      ^ - meta.function-call
//

    text: mix(rgba(100,0,0,1.0), rgba(0,100,0,0.5), 50%);
//        ^^^ meta.function-call.identifier.less support.function.less
//           ^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//            ^^^^ meta.function-call.arguments.less meta.group.less meta.function-call.identifier.css
//                ^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less meta.function-call.arguments.css meta.group.css
//                             ^^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//                               ^^^^ meta.function-call.arguments.less meta.group.less meta.function-call.identifier.css
//                                   ^^^^^^^^^^^^^ meta.function-call.arguments.less meta.group.less meta.function-call.arguments.css meta.group.css
//                                                ^^^^^^ meta.function-call.arguments.less meta.group.less - meta.function-call meta.function-call
//                                                      ^ - meta.function-call
//

    color: rgba(#ui-colors.dark[background-090],0.7);
//         ^^^^ meta.function-call.identifier.css support.function.color.css
//             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.css meta.group.css
//             ^ punctuation.section.group.begin.css
//              ^^^^^^^^^^^^^^^ meta.mixin.less
//                             ^^^^^^^^^^^^^^^^ meta.mixin.item-access.less meta.brackets.less
//              ^^^^^^^^^^ entity.other.attribute-name.id.css
//                        ^^^^^ entity.other.attribute-name.class.css
//                             ^ punctuation.section.brackets.begin.less
//                              ^^^^^^^^^^^^^^ constant.other.property-name.less
//                                            ^ punctuation.section.brackets.end.less
//                                             ^ punctuation.separator.sequence.css
//                                              ^^^ meta.number.float.decimal.css constant.numeric.value.css
//                                                 ^ punctuation.section.group.end.css
}

//=============================================================================
// CSS Modules
//
//   Interoperable CSS: https://github.com/css-modules/icss#specification
//   localAlias is basically any string inside a CSS file,
//   that will be replaced with the value stored as keyFromDep
//   keys must be a single term, consisting of only alphanumeric characters, underscores and dashes
//
//=============================================================================

:import("path/to/dep.css") {
//^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css
//^^^^^ meta.function-call.identifier.css entity.other.pseudo-class.css
//     ^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.css meta.group.css
//     ^ punctuation.section.group.begin.css
//      ^^^^^^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//      ^ punctuation.definition.string.begin.css
//           ^ punctuation.separator.path.css
//              ^ punctuation.separator.path.css
//                      ^ punctuation.definition.string.end.css
//                       ^ punctuation.section.group.end.css
//                         ^^ meta.property-list.module.css meta.block.css
//                         ^ punctuation.section.block.begin.css
    localAlias: keyFromDep ;
// ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.module.css meta.block.css
//  ^^^^^^^^^^ meta.property-name.css support.type.property-name.css
//            ^ punctuation.separator.key-value.css
//             ^ meta.property-value.css - meta.string - string
//              ^^^^^^^^^^ meta.property-value.css meta.string.css string.unquoted.css
//                        ^^^ - meta.string
//                         ^ punctuation.terminator.rule.css

    blababla : "keyFromDep";
// ^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.module.css meta.block.css
//  ^^^^^^^^ meta.property-name.css support.type.property-name.css
//           ^ punctuation.separator.key-value.css
//             ^^^^^^^^^^^^ meta.property-value.css meta.string.css string.quoted.double.css
//                         ^ punctuation.terminator.rule.css
}

/* CSS Modules
   An `exportedKey` exposes a specific value (a selector, a value, anything really)
*/
:export {
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^^^^^ meta.selector.css
//^^^^^ entity.other.pseudo-class.css
//      ^^ meta.property-list.module.css meta.block.css
//      ^ punctuation.section.block.begin.css

    exportedVal: exportedValue;
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.module.css meta.block.css
//  ^^^^^^^^^^^ meta.property-name.css support.type.property-name.css
//             ^ punctuation.separator.key-value.css
//              ^ meta.property-value.css - string
//               ^^^^^^^^^^^^^ meta.property-value.css meta.string.css string.unquoted.css
//                            ^ punctuation.terminator.rule.css

    exportedSel: #id;
// ^^^^^^^^^^^^^^^^^^^ meta.property-list.module.css meta.block.css
//  ^^^^^^^^^^^ meta.property-name.css support.type.property-name.css
//             ^ punctuation.separator.key-value.css
//              ^ meta.property-value.css - string
//               ^^^ meta.property-value.css meta.string.css string.unquoted.css
//                  ^ punctuation.terminator.rule.css

    exportedSel: .class;
// ^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.module.css meta.block.css
//  ^^^^^^^^^^^ meta.property-name.css support.type.property-name.css
//             ^ punctuation.separator.key-value.css
//              ^ meta.property-value.css - string
//               ^^^^^^ meta.property-value.css meta.string.css string.unquoted.css
//                     ^ punctuation.terminator.rule.css

    exportedSel: &-ish;
// ^^^^^^^^^^^^^^^^^^^^^ meta.property-list.module.css meta.block.css
//  ^^^^^^^^^^^ meta.property-name.css support.type.property-name.css
//             ^ punctuation.separator.key-value.css
//              ^ meta.property-value.css - string
//               ^^^^^ meta.property-value.css meta.string.css string.unquoted.css
//                    ^ punctuation.terminator.rule.css
}

/* CSS Modules
   Composing selectors: https://github.com/css-modules/css-modules#css-modules
*/
.otherClassName {
    composes: className from "./style.css";  // from filename
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//  ^^^^^^^^ meta.property-name.module.css support.type.property-name.css
//          ^ punctuation.separator.key-value.css
//           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-value.module.css
//            ^^^^^^^^^ entity.other.attribute-name.class.css
//                      ^^^^ keyword.control.import.from.css
//                           ^^^^^^^^^^^^^ meta.string.css string.quoted.double.css
//                            ^^^^^^^^^^^ meta.path.url.css
//                             ^ punctuation.separator.path.css
//                                        ^ punctuation.terminator.rule.css
//                                           ^^^^^^^^^^^^^^^^^ comment.line.double-slash.less

    composes: classNameA classNameB;         // multiple classnames
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//  ^^^^^^^^ meta.property-name.module.css support.type.property-name.css
//          ^ punctuation.separator.key-value.css
//           ^^^^^^^^^^^^^^^^^^^^^^ meta.property-value.module.css
//            ^^^^^^^^^^ entity.other.attribute-name.class.css
//                       ^^^^^^^^^^ entity.other.attribute-name.class.css
//                                 ^ punctuation.terminator.rule.css
//                                           ^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash.less

    composes: globalClassName from global;   // from global classnames
// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//  ^^^^^^^^ meta.property-name.module.css support.type.property-name.css
//          ^ punctuation.separator.key-value.css
//           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-value.module.css
//            ^^^^^^^^^^^^^^^ entity.other.attribute-name.class.css
//                            ^^^^ keyword.control.import.from.css
//                                 ^^^^^^ support.constant.namespace.global.css
//                                       ^ punctuation.terminator.rule.css
//                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash.less
}

/* CSS Modules
   Global vs. local scope: https://github.com/css-modules/css-modules#exceptions
*/
.localA :global(.me) .global-b .global-c :local(.localD.localE::before) .global-d
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.selector.css
//       ^^^^^^ meta.function-call.identifier.css entity.other.pseudo-class.css
//             ^^^^^ meta.function-call.arguments.css meta.group.css
//             ^ punctuation.section.group.begin.css
//              ^^^ entity.other.attribute-name.class.css
//                 ^ punctuation.section.group.end.css
//                   ^^^^^^^^^ entity.other.attribute-name.class.css
//                             ^^^^^^^^^ entity.other.attribute-name.class.css
//                                        ^^^^^ meta.function-call.identifier.css entity.other.pseudo-class.css
//                                             ^^^^^^^^^^^^^^^^^^^^^^^^ meta.function-call.arguments.css meta.group.css
//                                             ^ punctuation.section.group.begin.css
//                                              ^^^^^^^^^^^^^^ entity.other.attribute-name.class.css
//                                                            ^^ punctuation.definition.pseudo-element.css
//                                                              ^^^^^^ entity.other.pseudo-element.css
//                                                                    ^ punctuation.section.group.end.css
//                                                                      ^^^^^^^^^ entity.other.attribute-name.class.css

:global {  // global blocks
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^^^^^ meta.selector.css
//^^^^^ entity.other.pseudo-class.css
//      ^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//      ^ punctuation.section.block.begin.css
//         ^^^^^^^^^^^^^^^^^ comment.line.double-slash.less
    .global-class-name {
        color: green;
    }
}

:local {  // local blocks
// <- meta.selector.css punctuation.definition.pseudo-class.css
//^^^^^ meta.selector.css
//^^^^ entity.other.pseudo-class.css
//     ^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//     ^ punctuation.section.block.begin.css
//        ^^^^^^^^^^^^^^^^ comment.line.double-slash.less
    .global-class-name {
        color: green;
    }
}

//=============================================================================
// CSS tests
//=============================================================================

.property-name-and-value-tests {

    -display: -flex;
//  ^^^^^^^^ meta.property-name.css support.type.property-name.css
//           ^^^^^^ meta.property-value.css
//            ^^^^^ support.constant.property-value.css
//                 ^ meta.property-list.css meta.block.css punctuation.terminator.rule.css

    --custon-display: --flex;
// ^^^^^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//  ^^^^^^^^^^^^^^^^ meta.property-name.css entity.other.custom-property.css
//                  ^ punctuation.separator.key-value.css
//                   ^ meta.property-value.css - support
//                    ^^^^^^ meta.property-value.css support.constant.property-value.css
//                          ^ punctuation.terminator.rule.css

    -webkit-display: -webkit-flex;
//  ^^^^^^^^^^^^^^^ meta.property-name.css
//  ^^^^^^^^ support.type.vendor-prefix.css
//          ^^^^^^^ support.type.property-name.css
//                  ^^^^^^^^^^^^^ meta.property-value.css
//                   ^^^^^^^^ support.type.vendor-prefix.css
//                           ^^^^ support.constant.property-value.css
//                               ^ punctuation.terminator.rule.css

    -ℜ: value;
// ^^^^^^^^^^^^ meta.property-list.css meta.block.css
//  ^^ meta.property-name.css support.type.property-name.css
//    ^ punctuation.separator.key-value.css
//     ^ meta.property-value.css - support
//      ^^^^^ meta.property-value.css support.constant.property-value.css
//           ^ punctuation.terminator.rule.css

    ℜ-: value;
// ^^^^^^^^^^^^ meta.property-list.css meta.block.css
//  ^^ meta.property-name.css support.type.property-name.css
//    ^ punctuation.separator.key-value.css
//     ^ meta.property-value.css - support
//      ^^^^^ meta.property-value.css support.constant.property-value.css
//           ^ punctuation.terminator.rule.css

    \211C \7B-: value;
// ^^^^^^^^^^^^^^^^^^^^^ meta.property-list.css meta.block.css
//  ^^^^^^^^^^ meta.property-name.css support.type.property-name.css
//            ^ punctuation.separator.key-value.css
//             ^ meta.property-value.css - support
//              ^^^^^ meta.property-value.css support.constant.property-value.css
//                   ^ punctuation.terminator.rule.css

    { foo: }
//    ^^^ meta.property-name.css support.type.property-name.css
//       ^  punctuation.separator.key-value.css

    { { foo : } }
//      ^^^ meta.property-name.css support.type.property-name.css
//          ^  punctuation.separator.key-value.css

    { foo : #ccc }
//    ^^^ meta.property-name.css support.type.property-name.css
//        ^ punctuation.separator.key-value.css
//         ^^^^^^  meta.property-value.css
}

.mixins-vs-selectors {

    #library.color()
//  ^^^^^^^^^^^^^^ meta.mixin.less
//                ^^ meta.mixin.arguments.less meta.group.less

    @media only screen {}
//  ^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.media.css
//  ^^^^^^ keyword.control.directive.css
//         ^^^^ keyword.operator.logical.css
//              ^^^^^^ support.constant.media.css
//                     ^ punctuation.section.block.begin.css
//                      ^ punctuation.section.block.end.css
}

.properties-vs-selector-tests {

    /**
     * Using a special bailout to keep property name scoped as such
     * if followed by a known at-rule.
     **/

    color:
//  ^^^^^ meta.property-name.css support.type.property-name.css
//       ^ punctuation.separator.key-value.css
    @media only screen {}
//  ^^^^^^^^^^^^^^^^^^^^^ meta.at-rule.media.css
//  ^^^^^^ keyword.control.directive.css
//         ^^^^ keyword.operator.logical.css
//              ^^^^^^ support.constant.media.css
//                     ^ punctuation.section.block.begin.css
//                      ^ punctuation.section.block.end.css

    color:
//  ^^^^^^^ meta.selector.css
//  ^^^^^ entity.name.tag.other.css
//       ^ punctuation.definition.pseudo-class.css
    @unknown-at-rule {}
//  ^^^^^^^^^^^^^^^^ meta.selector.css variable.other.less
//                  ^ meta.selector.css - variable
//                   ^ punctuation.section.block.begin.css
//                    ^ punctuation.section.block.end.css

    color:
//  ^^^^^ meta.property-name.css support.type.property-name.css
//       ^ punctuation.separator.key-value.css
    @variable ;
//  ^^^^^^^^^ meta.property-value.css variable.other.less
//           ^ meta.property-value.css - variable
//            ^ punctuation.terminator.rule.css

    /**
     * Incomplete properties may be matched as selectors consisting of
     * custom elements or foreign tags as the syntax definition doesn't
     * maintain ever changing lists of supported property names.
     **/

    color:color:red;
//  ^^^^^^^^^^^^^^^ meta.selector.css
//  ^^^^^ entity.name.tag.other.css
//       ^ punctuation.definition.pseudo-class.css
//        ^^^^^ entity.other.pseudo-class.css
//             ^ punctuation.definition.pseudo-class.css
//              ^^^ entity.other.pseudo-class.css
//                 ^ punctuation.terminator.rule.css

    color:
//  ^^^^^^^ meta.selector.css
//  ^^^^^ entity.name.tag.other.css
//       ^ punctuation.definition.pseudo-class.css
    color:red;
// ^^^^^^^^^^ meta.selector.css
//  ^^^^^ entity.name.tag.other.css
//       ^ punctuation.definition.pseudo-class.css
//        ^^^ entity.other.pseudo-class.css
//           ^ punctuation.terminator.rule.css

    color:
//  ^^^^^^^ meta.selector.css
//  ^^^^^ entity.name.tag.other.css
//       ^ punctuation.definition.pseudo-class.css
    color: red;
// ^^^^^^^^^^^ meta.selector.css
//  ^^^^^ entity.name.tag.other.css
//       ^ punctuation.definition.pseudo-class.css
//         ^^^ entity.name.tag.other.css
//            ^ punctuation.terminator.rule.css

    color:;
//  ^^^^^ meta.property-name.css support.type.property-name.css
//       ^  punctuation.separator.key-value.css
//        ^  punctuation.terminator.rule.css
    color: red;
//  ^^^^^ meta.property-name.css support.type.property-name.css
//       ^  punctuation.separator.key-value.css
//        ^^^^ meta.property-value.css
//            ^  punctuation.terminator.rule.css
}

.css-functions {

    test: foo(@bar + 10);
//        ^^^ meta.function-call.identifier.css variable.function.css
//           ^^^^^^^^^^^ meta.function-call.arguments.css meta.group.css
//           ^ punctuation.section.group.begin.css
//            ^^^^ variable.other.less
//                 ^ keyword.operator.arithmetic.less
//                   ^^ meta.number.integer.decimal.css constant.numeric.value.css
//                     ^ punctuation.section.group.end.css
//                      ^ punctuation.terminator.rule.css

    test: calc(@foo * (@bar - 20));
//        ^^^^ meta.function-call.identifier.css support.function.calc.css
//            ^^^^^^^^ meta.function-call.arguments.css meta.group.css - meta.group meta.group
//                    ^^^^^^^^^^^ meta.function-call.arguments.css meta.group.css meta.group.css
//                               ^ meta.function-call.arguments.css meta.group.css - meta.group meta.group
//            ^ punctuation.section.group.begin.css
//             ^^^^ variable.other.less
//                  ^ keyword.operator.arithmetic.less
//                    ^ punctuation.section.group.begin.css
//                     ^^^^ variable.other.less
//                          ^ keyword.operator.arithmetic.less
//                            ^^ meta.number.integer.decimal.css constant.numeric.value.css
//                              ^^ punctuation.section.group.end.css
//                                ^ punctuation.terminator.rule.css

    test: toggle(@var);
//        ^^^^^^ meta.function-call.identifier.css support.function.toggle.css
//              ^^^^^^ meta.function-call.arguments.css meta.group.css
//              ^ punctuation.section.group.begin.css
//               ^^^^ variable.other.less
//                   ^ punctuation.section.group.end.css
//                    ^ punctuation.terminator.rule.css

    test: url(/ns.map[urlprop]);
//        ^^^ meta.function-call.identifier.css support.function.url.css
//           ^ meta.function-call.arguments.css meta.group.css punctuation.section.group.begin.css
//            ^^^^^^^^^^^^^^^^ meta.function-call.arguments.css meta.group.css meta.path.url.css meta.string.css string.unquoted.css
//                            ^ meta.function-call.arguments.css meta.group.css punctuation.section.group.end.css

    test: url(#ns.map[urlprop]);
//        ^^^ meta.function-call.identifier.css support.function.url.css
//           ^ meta.function-call.arguments.css meta.group.css punctuation.section.group.begin.css
//            ^^^^^^^ meta.function-call.arguments.css meta.group.css meta.mixin.less
//                   ^^^^^^^^^ meta.function-call.arguments.css meta.group.css meta.mixin.item-access.less meta.brackets.less
//                            ^ meta.function-call.arguments.css meta.group.css punctuation.section.group.end.css

    test: var(@var);
//        ^^^ meta.function-call.identifier.css support.function.var.css
//           ^^^^^^ meta.function-call.arguments.css meta.group.css
//           ^ punctuation.section.group.begin.css
//            ^^^^ variable.other.less
//                ^ punctuation.section.group.end.css
//                 ^ punctuation.terminator.rule.css
}
