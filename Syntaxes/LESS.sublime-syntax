%YAML 1.2
---
# https://lesscss.org
name: LESS
scope: source.less
version: 2

extends: CSS (for LESS).sublime-syntax

file_extensions:
  - less

variables:

  # CSS overrides

  ident_start: (?:{{nmstart}}|@+{)

  selector_begin: (?={{selector_start}}|&|@+{)
  selector_end: (?=[;{}])

  tag_name_begin: (?=[[:alpha:]]|@+{)

  property_or_selector_begin: (?={{selector_start}}|[-&]|{{ident_start}})

  # LESS variables

  hex_colors: (?:\h{3}|\h{4}|\h{6}|\h{8}){{break}}

  # https://lesscss.org/features/#import-atrules-feature-import-options
  less_import_options: |-
    (?xi: reference | inline | less | css | once | multiple | optional ){{break}}

  # https://lesscss.org/functions/
  less_builtin_functions: |-
    (?xi:
      {{less_logical_functions}}
    | {{less_list_functions}}
    | {{less_math_functions}}
    | {{less_misc_functions}}
    | {{less_string_functions}}
    | {{less_type_functions}}
    | {{less_color_blending_functions}}
    | {{less_color_definition_functions}}
    | {{less_color_channel_functions}}
    | {{less_color_operation_functions}}
    )

  # https://lesscss.org/functions/#color-blending
  less_color_blending_functions: |-
    (?x: average | difference | exclusion | hardlight | negation | overlay
    | screen | softlight )

  # https://lesscss.org/functions/#color-channel
  less_color_channel_functions: |-
    (?x: alpha | blue | green | hsvhue | hsvsaturation | hsvvalue | lightness
    | luma | luminance | red | saturation )

  # https://lesscss.org/functions/#color-definition
  # note: rgb(), rgba(), hsl(), hsla() are already defined by CSS.
  less_color_definition_functions: |-
    (?x: (?# rgba | hsla? | ) argb | hsva? )

  # https://lesscss.org/functions/#color-operations
  less_color_operation_functions: |-
    (?x: contrast | darken | desaturate | fade | fadein | fadeout | greyscale
    | lighten | mix | saturate | shade | spin | tint )

  # https://lesscss.org/functions/#logical-functions
  less_logical_functions: |-
    (?x: boolean (?# | if ) )

  # https://lesscss.org/functions/#list-functions
  less_list_functions: |-
    (?x: (?# each | ) extract | length | range )

  # https://lesscss.org/functions/#math-functions
  less_math_functions: |-
    (?x: abs | acos | asin | atan | cos | floor | max | min | mod | percentage
    | pi | pow | round | sin | sqrt | tan )

  # https://lesscss.org/functions/#misc-functions
  less_misc_functions: |-
    (?x: convert | data-uri | default | get-unit | image-(?: height | size | width )
    | (?# svg-gradient | ) unit )

  # https://lesscss.org/functions/#string-functions
  less_string_functions: |-
    (?x: escape | e (?# | format | replace ) )

  # https://lesscss.org/functions/#type-functions
  less_type_functions: |-
    (?x: is (?: color | em | keyword | number | percentage | pixel | string | unit | url ) )

  # https://lesscss.org/functions/#misc-functions-svg-gradient
  less_svg_gradient_constants: |-
    (?xi: to (?: [ ]bottom | [ ]top )? (?: [ ]right )? | elipse (?:[ ]at[ ]center )? ){{break}}

###############################################################################

contexts:

###[ CSS ]#####################################################################

  stylesheet:
    - include: comments
    - include: less-builtin-functions
    - include: properties-or-selectors
    - include: property-lists
    - include: at-rules
    - include: rule-terminators
    - include: illegal-groups

###[ CSS COMMENTS ]############################################################

  comments:
    - meta_append: true
    - include: less-line-comments

##[ CSS AT RULES ]############################################################

  at-other:
    - meta_prepend: true
    - include: less-plugins
    - include: less-declarations
    - include: less-variable-calls

###[ CSS MEDIA QUERIES ]#######################################################

  media-query-conditions:
    - meta_append: true
    - include: less-interpolations

  media-query-property-names:
    - meta_prepend: true
    - include: less-merge-operators

###[ CSS PROPERTIES OR SELECTORS ]#############################################

  properties-or-selectors:
    - match: '{{property_or_selector_begin}}'
      branch_point: property-or-selector
      branch:
        - maybe-property
        - selector-body

  maybe-property:
    - include: property-identifiers
    # a property's value is followed/terminated by one of ; ) }
    - match: (?=[;)}])
      pop: 1
    # otherwise it is part of a selector
    - match: ''
      fail: property-or-selector

###[ CSS SELECTORS ]############################################################

  selector-body:
    - meta_prepend: true
    - include: less-selector-guard
    - include: less-selector-parameter-lists
    - include: less-variables
    - include: important-operators

  selector-tag-content:
    - meta_prepend: true
    - include: less-interpolations

  selector-variables:
    - meta_append: true
    - include: less-selector-parent-identifiers

###[ CSS SELECTORS / ATTRIBUTE SELECTORS ]######################################

  attribute-selector-key:
    - meta_prepend: true
    - include: less-variables

  attribute-selector-unquoted-value-content:
    - meta_prepend: true
    - include: less-interpolations

###[ CSS SELECTORS / PSEUDO CLASSES ]##########################################

  selector-pseudo-class:
    - meta_prepend: true
    - include: css-modules-pseudo-class

  pseudo-class-function-with-selector-args:
    - meta_prepend: true
    - include: less-pseudo-class-function-with-selector-args

  pseudo-class-anb-arguments-list-body:
    # replace CSS context as `less-expressions` must be appended
    # for `anb-notation-values` to take precedence
    - meta_content_scope: meta.function-call.arguments.css meta.group.css
    - include: css-function-arguments-prototype
    - include: anb-notation-values
    - include: scalar-integer-constants
    - include: less-expressions

  pseudo-class-lang-arguments-list-body:
    # replace CSS context as `less-expressions` must be appended
    # for `language-ranges` to take precedence
    - meta_content_scope: meta.function-call.arguments.css meta.group.css
    - include: css-function-arguments-prototype
    - include: comma-delimiters
    - include: quoted-strings
    - include: language-ranges
    - include: less-expressions

###[ CSS PROPERTY LISTS ]######################################################

  property-list-body:
    - meta_scope: meta.property-list.css meta.block.css
    - include: block-end
    - include: stylesheet

  property-identifiers:
    - meta_prepend: true
    - include: css-modules-composes-properties

###[ CSS PROPERTY VALUES ]#####################################################

  counter-property-value:
    - meta_prepend: true
    - include: less-merge-operators

  counter-style-fallback-property-value:
    - meta_prepend: true
    - include: less-merge-operators

  counter-style-system-property-value:
    - meta_prepend: true
    - include: less-merge-operators

  counter-style-speak-as-property-value:
    - meta_prepend: true
    - include: less-merge-operators

  font-family-value:
    - meta_prepend: true
    - include: less-merge-operators

  font-property-value:
    - meta_prepend: true
    - include: less-merge-operators

  property-value:
    - meta_prepend: true
    - include: less-merge-operators

  value-prototype:
    - meta_prepend: true
    - include: less-expressions

###[ CSS FUNCTIONS ]###########################################################

  function-arguments-prototype:
    # replace CSS context to remove `illegal-groups`
    - include: css-function-arguments-prototype
    - include: less-expressions

  css-function-arguments-prototype:
    # CSS function-arguments-prototype without less-expressions
    - include: function-arguments-list-end
    - match: (?=[;{}])
      pop: 1
    - include: comments
    - include: var-functions

  url-function-arguments-list-body:
    - meta_content_scope: meta.function-call.arguments.css meta.group.css
    - include: css-function-arguments-prototype
    - include: quoted-urls
    - include: unquoted-urls
    - include: less-expressions

  url-regexp-function-arguments-list-body:
    - meta_content_scope: meta.function-call.arguments.css meta.group.css
    - include: css-function-arguments-prototype
    - include: less-quoted-regexp-patterns

###[ CSS IDENTIFIERS ]#########################################################

  identifier-content:
    - meta_prepend: true
    - include: less-interpolations

###[ CSS STRING CONSTANTS ]####################################################

  line-names-content:
    - meta_prepend: true
    - include: less-string-interpolations

  string-content:
    - meta_prepend: true
    - include: less-string-interpolations

###[ CSS MODULES / PSEUDO CLASSES ]############################################

  css-modules-pseudo-class:
    # https://github.com/css-modules/icss#specification
    - include: css-modules-export-pseudo-class
    - include: css-modules-import-pseudo-class
    - include: css-modules-scope-pseudo-class

  css-modules-export-pseudo-class:
    - match: (?i:export){{break}}
      scope: entity.other.pseudo-class.css
      set: css-modules-block

  css-modules-import-pseudo-class:
    - match: (?i:import){{break}}
      scope: meta.function-call.identifier.css entity.other.pseudo-class.css
      set:
        - css-modules-block
        - url-function-arguments-list-body
        - function-arguments-list-begin

  css-modules-scope-pseudo-class:
    - match: (?i:global|local)(?=\()
      scope: meta.function-call.identifier.css entity.other.pseudo-class.css
      set:
        - pseudo-class-selector-arguments-list-body
        - function-arguments-list-begin

  css-modules-block:
    # pop pseudo-class and selector context off stack
    # and continue with css module property list
    - match: \{
      scope: punctuation.section.block.begin.css
      pop: 2
      push: css-modules-block-body

  css-modules-block-body:
    - meta_scope: meta.property-list.module.css meta.block.css
    - include: block-end
    - include: comments
    - include: css-modules-custom-properties
    - include: css-modules-other-properties
    - include: css-modules-property-values
    - include: rule-terminators
    - include: illegal-blocks
    - include: illegal-groups

  css-modules-custom-properties:
    - match: '--'
      push: css-modules-custom-property-content

  css-modules-custom-property-content:
    - meta_scope: meta.property-name.css entity.other.custom-property.css
    - include: identifier-content

  css-modules-other-properties:
    - match: (?:{{vendor_prefix}}|{{generic_ident_begin}})
      scope: support.type.vendor-prefix.css
      push: css-modules-property-content

  css-modules-property-content:
    - meta_scope: meta.property-name.css
    - meta_content_scope: support.type.property-name.css
    - include: identifier-content

  css-modules-property-values:
    - meta_include_prototype: false
    - match: ':'
      scope: punctuation.separator.key-value.css
      push:
        - css-modules-property-value-meta
        - css-modules-property-value-content

  css-modules-property-value-meta:
    - meta_include_prototype: false
    - meta_content_scope: meta.property-value.css
    - include: immediately-pop

  css-modules-property-value-content:
    - include: quoted-string
    - include: css-modules-unquoted-string
    - include: else-pop

  css-modules-unquoted-string:
    - match: (?=\S)
      set: css-modules-unquoted-string-body

  css-modules-unquoted-string-body:
    - meta_scope: meta.string.css string.unquoted.css
    - match: (?=\s*(;|/[/*]))
      pop: 1

###[ CSS MODULES / COMPOSES PROPERTY ]#########################################

  css-modules-composes-properties:
    # https://github.com/css-modules/css-modules#css-modules
    - match: \b(?i:composes){{break}}
      scope: meta.property-name.module.css support.type.property-name.css
      push: css-modules-composes-value

  css-modules-composes-value:
    - meta_include_prototype: false
    - match: ':'
      scope: punctuation.separator.key-value.css
      set: css-modules-composes-value-content
    - include: else-pop

  css-modules-composes-value-content:
    - meta_content_scope: meta.property-value.module.css
    - include: value-prototype
    - include: quoted-strings
    - match: (?i:from){{break}}
      scope: keyword.control.import.from.css
    - match: (?i:global){{break}}
      scope: support.constant.namespace.global.css
    - match: '{{ident_begin}}'
      push: css-modules-composes-class-name-content

  css-modules-composes-class-name-content:
    - meta_scope: entity.other.attribute-name.class.css
    - include: identifier-content

###[ LESS ]####################################################################

  less-expressions:
    - include: less-selectors
    - include: less-functions
    - include: less-groups
    - include: less-logical-operators
    - include: less-operators
    - include: less-variables

###[ LESS COMMENTS ]###########################################################

  less-line-comments:
    - match: //+
      scope: punctuation.definition.comment.less
      push: less-line-comments-body

  less-line-comments-body:
    - meta_scope: comment.line.double-slash.less
    - match: \n
      pop: 1

###[ LESS AT IMPORTS ]#########################################################

  at-import:
    # https://lesscss.org/features/#import-atrules-feature-file-extensions
    # note: overwrites CSS imports
    - match: (@)(?i:import){{break}}
      captures:
        0: keyword.control.directive.css
        1: punctuation.definition.keyword.css
      push:
        - at-import-body
        - at-import-options-list

  at-import-options-list:
    - match: \(
      scope: punctuation.section.group.begin.less
      set: at-import-options-list-body
    - include: else-pop

  at-import-options-list-body:
    - clear_scopes: 1
    - meta_scope: meta.at-rule.import.options.css meta.group.less
    - include: less-group-end
    - include: at-rule-end
    - include: comma-delimiters
    - match: '{{less_import_options}}'
      scope: constant.language.import.less

###[ LESS AT PLUGINS ]#########################################################

  less-plugins:
    # https://lesscss.org/features/#plugin-atrules-feature
    - match: (@)(?i:plugin){{break}}
      captures:
        0: keyword.control.directive.less
        1: punctuation.definition.keyword.less
      push: less-plugin-content

  less-plugin-content:
    - meta_scope: meta.at-rule.plugin.less
    - include: quoted-strings
    - include: url-functions
    - include: at-rule-end

###[ LESS DECLARATIONS ]#######################################################

  less-declarations:
    - match: ((@){{ident}})(\s*(:))
      captures:
        1: meta.declaration.identifier.less variable.other.less
        2: punctuation.definition.variable.less
        3: meta.declaration.less
        4: punctuation.separator.key-value.css
      push: less-declaration-value

  less-declaration-value:
    - meta_content_scope: meta.declaration.value.less
    - match: \{
      scope: punctuation.section.block.begin.css
      push: less-declaration-property-list-body
    - include: values

  less-declaration-property-list-body:
    - meta_scope: meta.property-list.css meta.block.css
    - include: block-end2
    - include: stylesheet

###[ LESS SELECTORS ]##########################################################

  less-selectors:
    # mixins in values
    # note: hex color values have precedence
    - match: (?=[.#](?:-|(?!{{hex_colors}})){{nmstart}})
      push: less-selector-body

  less-selector-body:
    - meta_scope: meta.selector.less
    - include: comments
    - include: attribute-selectors
    - include: selector-classes
    - include: selector-ids
    - include: less-groups
    - include: else-pop

###[ LESS SELECTORS / GUARDS ]#################################################

  less-selector-guard:
    - match: \b(?i:when)\b
      scope: keyword.control.conditional.less
      set: less-selector-guard-content

  less-selector-guard-content:
    - meta_scope: meta.selector.css meta.guard.less
    - include: comments
    - include: less-groups
    - include: less-logical-operators
    - include: else-pop

###[ LESS SELECTORS / PARENT IDENTIFIERS ]#####################################

  less-selector-parent-identifiers:
    - match: \&
      scope: variable.language.parent.less
      push: less-selector-parent-identifier-content

  less-selector-parent-identifier-content:
    - meta_scope: entity.other.attribute-name.css
    - include: identifier-content

###[ LESS SELECTORS / PSEUDO CLASSES ]#########################################

  less-pseudo-class-function-with-selector-args:
    - match: (?i:extend)(?=\()
      scope: meta.function-call.identifier.less entity.other.pseudo-class.less
      set:
        - less-pseudo-class-selector-arguments-list-body
        - less-function-arguments-list-begin

  less-pseudo-class-selector-arguments-list-body:
    - meta_content_scope: meta.function-call.arguments.less meta.group.less
    - include: less-function-arguments-list-end
    - match: (?i:all){{break}}
      scope: keyword.other.all.less
    - include: selector-body

###[ LESS SELECTOR PARAMETERS ]################################################

  less-selector-parameter-lists:
    - match: \(
      scope: punctuation.section.group.begin.less
      push: less-selector-parameter-list-body

  less-selector-parameter-list-body:
    - meta_scope: meta.group.less
    - include: less-group-end
    - include: comments
    - include: less-selector-parameter-list-content

  less-selector-parameter-list-content:
    - include: less-parameter-separators
    - include: less-variadic-operators
    - include: property-lists
    - include: values

  less-parameter-separators:
    - match: ':'
      scope: punctuation.separator.key-value.css
    - match: ;
      scope: punctuation.separator.parameter.less

###[ LESS GROUPS ]#############################################################

  less-groups:
    - match: \(
      scope: punctuation.section.group.begin.less
      push: less-group-body

  less-group-body:
    - meta_scope: meta.group.less
    - include: less-group-end
    - include: values

  less-group-end:
    - match: \)
      scope: punctuation.section.group.end.less
      pop: 1

###[ LESS FUNCTIONS ]##########################################################

  less-functions:
    - include: less-builtin-functions
    - include: less-variable-calls

  less-builtin-functions:
    # builtin functions with special highlighting
    - include: less-global-functions
    - include: less-format-functions
    - include: less-replace-functions
    - include: less-svg-gradient-functions
    # builtin functions with standard highlighting
    - match: '{{less_builtin_functions}}(?=\()'
      scope: meta.function-call.identifier.less support.function.less
      push:
        - less-function-arguments-list-body
        - less-function-arguments-list-begin

  less-global-functions:
    # https://lesscss.org/functions/#logical-functions-if
    # https://lesscss.org/functions/#list-functions-each
    - match: (?i:each|if)(?=\()
      scope: meta.function-call.identifier.less support.function.less
      push:
        - less-global-functions-arguments-list-content
        - less-function-arguments-list-begin

  less-global-functions-arguments-list-content:
    - meta_content_scope: meta.function-call.arguments.less meta.group.less
    - include: less-function-arguments-list-end
    - include: property-lists
    - include: values

  less-format-functions:
    # https://lesscss.org/functions/#string-functions--format
    - match: '%(?=\()'
      scope: meta.function-call.identifier.less support.function.less
      push:
        - less-function-arguments-list-body
        - less-format-function-format-string
        - less-function-arguments-list-begin

  less-format-function-format-string:
    - include: less-quoted-format-string
    - include: else-pop

  less-replace-functions:
    # https://lesscss.org/functions/#string-functions--replace
    - match: (?i:replace)(?=\()
      scope: meta.function-call.identifier.less support.function.less
      push:
        - less-replace-function-arguments-flags
        - less-replace-function-arguments-replacement
        - less-replace-function-arguments-pattern
        - less-replace-function-arguments-string
        - less-function-arguments-list-begin

  less-replace-function-arguments-flags:
    - meta_content_scope: meta.function-call.arguments.less meta.group.less
    - include: less-function-arguments-list-end
    - include: terminator-pop
    - include: comments
    - include: comma-delimiters
    - include: less-escape-operators
    - include: quoted-strings

  less-replace-function-arguments-pattern:
    - include: less-escape-operators
    - include: less-quoted-regexp-pattern
    - include: comma-delimiters
    - include: comments
    - include: else-pop

  less-replace-function-arguments-replacement:
    - include: less-escape-operators
    - include: less-quoted-replacement-string
    - include: comma-delimiters
    - include: comments
    - include: else-pop

  less-replace-function-arguments-string:
    - include: less-escape-operators
    - include: quoted-string
    - include: comments
    - include: else-pop

  less-svg-gradient-functions:
    # https://lesscss.org/functions/#logical-functions-if
    # https://lesscss.org/functions/#list-functions-each
    - match: (?i:svg-gradient)(?=\()
      scope: meta.function-call.identifier.less support.function.less
      push:
        - less-svg-gradient-function-arguments-list-body
        - less-function-arguments-list-begin

  less-svg-gradient-function-arguments-list-body:
    - meta_content_scope: meta.function-call.arguments.less meta.group.less
    - include: less-function-arguments-list-end
    - match: '{{less_svg_gradient_constants}}'
      scope: keyword.other.gradient.less
    - include: values

###[ LESS VARIABLE CALLS ]#####################################################

  less-variable-calls:
    - match: (@+){{ident}}(?=\s*\()
      scope: meta.function-call.identifier.less variable.other.less
      captures:
        1: punctuation.definition.variable.less
      push:
        - less-function-arguments-list-body
        - less-function-arguments-list-begin

###[ LESS COMMON FUNCTION ARGUMENTS ]##########################################

  less-function-arguments-list-begin:
    - meta_include_prototype: false
    - match: \(
      scope: punctuation.section.group.begin.less
      pop: 1

  less-function-arguments-list-end:
    - match: \)
      scope: meta.function-call.arguments.less meta.group.less punctuation.section.group.end.less
      pop: 1

  less-function-arguments-list-body:
    - meta_content_scope: meta.function-call.arguments.less meta.group.less
    - include: less-function-arguments-list-end
    - include: values

###[ LESS LITERAL STRINGS ]####################################################

  less-quoted-format-string:
    # LESS format strings are scoped as CSS strings
    # a) as it enables re-using existing contexts from CSS
    # b) as LESS strings may be used in same contexts as quoted CSS strings
    - match: \"
      scope: punctuation.definition.string.begin.css
      set: less-double-quoted-format-string-body
    - match: \'
      scope: punctuation.definition.string.begin.css
      set: less-single-quoted-format-string-body

  less-double-quoted-format-string-body:
    - meta_include_prototype: false
    - meta_scope: meta.string.format.css string.quoted.double.css
    - include: double-quoted-string-end
    - include: less-string-placeholders
    - include: string-content

  less-single-quoted-format-string-body:
    - meta_include_prototype: false
    - meta_scope: meta.string.format.css string.quoted.single.css
    - include: single-quoted-string-end
    - include: less-string-placeholders
    - include: string-content

  less-string-placeholders:
    - match: '%%'
      scope: constant.character.escape.less
    - match: '%[adsADS]'
      scope: constant.other.placeholder.less

  less-quoted-regexp-patterns:
    # LESS regexp pattern strings are scoped as CSS strings
    # a) as it enables re-using existing contexts from CSS
    # b) as LESS strings may be used in same contexts as quoted CSS strings
    - match: \"
      scope: punctuation.definition.string.begin.css
      push: less-double-quoted-regexp-pattern-body
    - match: \'
      scope: punctuation.definition.string.begin.css
      push: less-single-quoted-regexp-pattern-body

  less-quoted-regexp-pattern:
    - match: \"
      scope: string.quoted.double.css punctuation.definition.string.begin.css
      set: less-double-quoted-regexp-pattern-body
    - match: \'
      scope: string.quoted.single.css punctuation.definition.string.begin.css
      set: less-single-quoted-regexp-pattern-body

  less-double-quoted-regexp-pattern-body:
    - meta_include_prototype: false
    - meta_scope: meta.string.regexp.css
    - meta_content_scope: source.regexp.css
    - match: \"
      scope: string.quoted.double.css punctuation.definition.string.end.css
      pop: 1
    - include: illegal-string-end
    - match: ''
      push: scope:source.regexp.basic
      with_prototype:
        - match: (?=["\n])
          pop: 1
        - include: less-regexp-pattern-prototype

  less-single-quoted-regexp-pattern-body:
    - meta_include_prototype: false
    - meta_scope: meta.string.regexp.css
    - meta_content_scope: source.regexp.css
    - match: \'
      scope: string.quoted.single.css punctuation.definition.string.end.css
      pop: 1
    - include: illegal-string-end
    - match: ''
      push: scope:source.regexp.basic
      with_prototype:
        - match: (?=['\n])
          pop: 1
        - include: less-regexp-pattern-prototype

  less-regexp-pattern-prototype:
    - match: (@)({)({{ident}})(})
      scope: meta.interpolation.less
      captures:
        1: punctuation.definition.variable.less
        2: punctuation.section.interpolation.begin.less
        3: variable.other.less
        4: punctuation.section.interpolation.end.less
      push: less-regexp-pattern-quantifiers

  less-regexp-pattern-quantifiers:
    # make sure to not highlight quantifiers illegal after interpolation
    - meta_include_prototype: false
    - include: scope:source.regexp.basic#quantifiers
    - include: immediately-pop

  less-quoted-replacement-string:
    # LESS regexp replacement strings are scoped as CSS strings
    # a) as it enables re-using existing contexts from CSS
    # b) as LESS strings may be used in same contexts as quoted CSS strings
    - match: \"
      scope: punctuation.definition.string.begin.css
      set: less-double-quoted-replacement-string-body
    - match: \'
      scope: punctuation.definition.string.begin.css
      set: less-single-quoted-replacement-string-body

  less-double-quoted-replacement-string-body:
    - meta_include_prototype: false
    - meta_scope: meta.string.regexp.replacement.css string.quoted.double.css
    - include: double-quoted-string-end
    - include: scope:source.regexp-replace
    - include: string-content

  less-single-quoted-replacement-string-body:
    - meta_include_prototype: false
    - meta_scope: meta.string.regexp.replacement.css string.quoted.single.css
    - include: single-quoted-string-end
    - include: scope:source.regexp-replace
    - include: string-content

###[ LESS OPERATORS ]##########################################################

  less-escape-operators:
    - match: '~'
      scope: keyword.operator.escape.less

  less-merge-operators:
    - match: \+_?
      scope: keyword.operator.merge.less

  less-logical-operators:
    - match: \b(?i:and|or|not)\b
      scope: keyword.operator.logical.less

  less-variadic-operators:
    - match: \.{3}(?!\.)
      scope: keyword.operator.variadic.less

  less-operators:
    - match: /(?![*/]) # make sure comments take precedence
      scope: keyword.operator.arithmetic.less
    - match: (?!{{ident_begin}})- # make sure identifiers take precedence
      scope: keyword.operator.arithmetic.less
    - match: '[+*]'
      scope: keyword.operator.arithmetic.less
    - match: '[<>]=?|='
      scope: keyword.operator.comparison.less
    - include: less-escape-operators

###[ LESS VARIABLES ]##########################################################

  less-interpolations:
    - match: (@)({)({{ident}})(})
      scope: meta.interpolation.less
      captures:
        1: punctuation.definition.variable.less
        2: punctuation.section.interpolation.begin.less
        3: variable.other.less
        4: punctuation.section.interpolation.end.less

  less-string-interpolations:
    - match: (@)({)({{ident}})(})
      scope: meta.interpolation.less
      captures:
        1: punctuation.definition.variable.less
        2: punctuation.section.interpolation.begin.less
        3: variable.other.less
        4: punctuation.section.interpolation.end.less
      push: clear-pop

  less-variables:
    - match: (\$){{ident}}
      scope: variable.other.property.less
      captures:
        1: punctuation.definition.variable.less
      push: less-item-access
    - match: (@+)(arguments|rest){{break}}
      scope: variable.language.mixin.less
      captures:
        1: punctuation.definition.variable.less
      push: less-item-access
    - match: (@+){{ident}}
      scope: variable.other.less
      captures:
        1: punctuation.definition.variable.less
      push: less-item-access

  less-item-access:
    - include: attribute-selectors
    - include: immediately-pop
